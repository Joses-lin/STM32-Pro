ARM GAS  /tmp/ccvgpFwF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.section	.rodata.str1.4,"aMS",%progbits,1
  13              		.align	2
  14              	.LC0:
  15 0000 64656661 		.ascii	"defaultTask\000"
  15      756C7454 
  15      61736B00 
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.arch armv7-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu softvfp
  27              	MX_GPIO_Init:
  28              	.LFB78:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "usb_host.h"
  24:Core/Src/main.c **** #include "GUI.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccvgpFwF.s 			page 2


  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  53:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** UART_HandleTypeDef huart2;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** osThreadId defaultTaskHandle;
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** static void MX_SPI1_Init(void);
  66:Core/Src/main.c **** void MX_I2C1_Init(void);
  67:Core/Src/main.c **** static void MX_RTC_Init(void);
  68:Core/Src/main.c **** static void MX_SPI3_Init(void);
  69:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  70:Core/Src/main.c **** static void MX_CRC_Init(void);
  71:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /**
  83:Core/Src/main.c ****   * @brief  The application entry point.
  84:Core/Src/main.c ****   * @retval int
ARM GAS  /tmp/ccvgpFwF.s 			page 3


  85:Core/Src/main.c ****   */
  86:Core/Src/main.c **** int main(void)
  87:Core/Src/main.c **** {
  88:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END 1 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  95:Core/Src/main.c ****   HAL_Init();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Configure the system clock */
 102:Core/Src/main.c ****   SystemClock_Config();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Initialize all configured peripherals */
 109:Core/Src/main.c ****   MX_GPIO_Init();
 110:Core/Src/main.c ****   MX_SPI1_Init();
 111:Core/Src/main.c ****   MX_RTC_Init();
 112:Core/Src/main.c ****   MX_SPI3_Init();
 113:Core/Src/main.c ****   MX_USART2_UART_Init();
 114:Core/Src/main.c ****   MX_CRC_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 120:Core/Src/main.c ****   /* add mutexes, ... */
 121:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 124:Core/Src/main.c ****   /* add semaphores, ... */
 125:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 128:Core/Src/main.c ****   /* start timers, add new ones, ... */
 129:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 132:Core/Src/main.c ****   /* add queues, ... */
 133:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Create the thread(s) */
 136:Core/Src/main.c ****   /* definition and creation of defaultTask */
 137:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 138:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 141:Core/Src/main.c ****   /* add threads, ... */
ARM GAS  /tmp/ccvgpFwF.s 			page 4


 142:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Start scheduler */
 145:Core/Src/main.c ****   osKernelStart();
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     /* USER CODE END WHILE */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   /* USER CODE END 3 */
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief System Clock Configuration
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void SystemClock_Config(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 170:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 198:Core/Src/main.c ****   {
ARM GAS  /tmp/ccvgpFwF.s 			page 5


 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USB;
 202:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 203:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV3;
 204:Core/Src/main.c ****   PeriphClkInit.PLLI2S.PLLI2SMUL = RCC_PLLI2S_MUL10;
 205:Core/Src/main.c ****   PeriphClkInit.PLLI2S.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 206:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO, RCC_MCO1SOURCE_PLL3CLK, RCC_MCODIV_1);
 211:Core/Src/main.c ****   /** Configure the Systick interrupt time
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c ****   __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_HSE_PREDIV2_DIV5);
 214:Core/Src/main.c ****   /** Configure the Systick interrupt time
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c ****   __HAL_RCC_PLLI2S_CONFIG(RCC_PLLI2S_MUL10);
 217:Core/Src/main.c ****   /** Configure the Systick interrupt time
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c ****   __HAL_RCC_PLLI2S_ENABLE();
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief CRC Initialization Function
 224:Core/Src/main.c ****   * @param None
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** static void MX_CRC_Init(void)
 228:Core/Src/main.c **** {
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 237:Core/Src/main.c ****   hcrc.Instance = CRC;
 238:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /**
 249:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 250:Core/Src/main.c ****   * @param None
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** void MX_I2C1_Init(void)
 254:Core/Src/main.c **** {
 255:Core/Src/main.c **** 
ARM GAS  /tmp/ccvgpFwF.s 			page 6


 256:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 263:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 264:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 265:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 266:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 20;
 267:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 268:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 269:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 270:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 271:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 272:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /**
 283:Core/Src/main.c ****   * @brief RTC Initialization Function
 284:Core/Src/main.c ****   * @param None
 285:Core/Src/main.c ****   * @retval None
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c **** static void MX_RTC_Init(void)
 288:Core/Src/main.c **** {
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 295:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 300:Core/Src/main.c ****   /** Initialize RTC Only
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c ****   hrtc.Instance = RTC;
 303:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 304:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 305:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
ARM GAS  /tmp/ccvgpFwF.s 			page 7


 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c ****   sTime.Hours = 0x15;
 317:Core/Src/main.c ****   sTime.Minutes = 0x12;
 318:Core/Src/main.c ****   sTime.Seconds = 0x11;
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c ****   DateToUpdate.WeekDay = RTC_WEEKDAY_MONDAY;
 325:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 326:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 327:Core/Src/main.c ****   DateToUpdate.Year = 0x20;
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &DateToUpdate, RTC_FORMAT_BCD) != HAL_OK)
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****     Error_Handler();
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /**
 340:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 341:Core/Src/main.c ****   * @param None
 342:Core/Src/main.c ****   * @retval None
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c **** static void MX_SPI1_Init(void)
 345:Core/Src/main.c **** {
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 354:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 355:Core/Src/main.c ****   hspi1.Instance = SPI1;
 356:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 357:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 358:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 359:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 360:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 361:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 362:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 363:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 364:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 365:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 366:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 367:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccvgpFwF.s 			page 8


 370:Core/Src/main.c ****   }
 371:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /**
 378:Core/Src/main.c ****   * @brief SPI3 Initialization Function
 379:Core/Src/main.c ****   * @param None
 380:Core/Src/main.c ****   * @retval None
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c **** static void MX_SPI3_Init(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
 392:Core/Src/main.c ****   /* SPI3 parameter configuration*/
 393:Core/Src/main.c ****   hspi3.Instance = SPI3;
 394:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 395:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 396:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 397:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 398:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 399:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 400:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 401:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 402:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 403:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 404:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 405:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** }
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** /**
 416:Core/Src/main.c ****   * @brief USART2 Initialization Function
 417:Core/Src/main.c ****   * @param None
 418:Core/Src/main.c ****   * @retval None
 419:Core/Src/main.c ****   */
 420:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 421:Core/Src/main.c **** {
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 426:Core/Src/main.c **** 
ARM GAS  /tmp/ccvgpFwF.s 			page 9


 427:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 430:Core/Src/main.c ****   huart2.Instance = USART2;
 431:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 432:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 433:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 434:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 435:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 436:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 437:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 438:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /**
 449:Core/Src/main.c ****   * @brief GPIO Initialization Function
 450:Core/Src/main.c ****   * @param None
 451:Core/Src/main.c ****   * @retval None
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c **** static void MX_GPIO_Init(void)
 454:Core/Src/main.c **** {
  30              		.loc 1 454 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 8BB0     		sub	sp, sp, #44
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 80
 455:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  49              		.loc 1 455 3 view .LVU1
  50              		.loc 1 455 20 is_stmt 0 view .LVU2
  51 0006 0024     		movs	r4, #0
  52 0008 0694     		str	r4, [sp, #24]
  53 000a 0794     		str	r4, [sp, #28]
  54 000c 0894     		str	r4, [sp, #32]
  55 000e 0994     		str	r4, [sp, #36]
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccvgpFwF.s 			page 10


 458:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  56              		.loc 1 458 3 is_stmt 1 view .LVU3
  57              	.LBB2:
  58              		.loc 1 458 3 view .LVU4
  59              		.loc 1 458 3 view .LVU5
  60 0010 624B     		ldr	r3, .L3
  61 0012 9A69     		ldr	r2, [r3, #24]
  62 0014 42F04002 		orr	r2, r2, #64
  63 0018 9A61     		str	r2, [r3, #24]
  64              		.loc 1 458 3 view .LVU6
  65 001a 9A69     		ldr	r2, [r3, #24]
  66 001c 02F04002 		and	r2, r2, #64
  67 0020 0192     		str	r2, [sp, #4]
  68              		.loc 1 458 3 view .LVU7
  69 0022 019A     		ldr	r2, [sp, #4]
  70              	.LBE2:
  71              		.loc 1 458 3 view .LVU8
 459:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  72              		.loc 1 459 3 view .LVU9
  73              	.LBB3:
  74              		.loc 1 459 3 view .LVU10
  75              		.loc 1 459 3 view .LVU11
  76 0024 9A69     		ldr	r2, [r3, #24]
  77 0026 42F01002 		orr	r2, r2, #16
  78 002a 9A61     		str	r2, [r3, #24]
  79              		.loc 1 459 3 view .LVU12
  80 002c 9A69     		ldr	r2, [r3, #24]
  81 002e 02F01002 		and	r2, r2, #16
  82 0032 0292     		str	r2, [sp, #8]
  83              		.loc 1 459 3 view .LVU13
  84 0034 029A     		ldr	r2, [sp, #8]
  85              	.LBE3:
  86              		.loc 1 459 3 view .LVU14
 460:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  87              		.loc 1 460 3 view .LVU15
  88              	.LBB4:
  89              		.loc 1 460 3 view .LVU16
  90              		.loc 1 460 3 view .LVU17
  91 0036 9A69     		ldr	r2, [r3, #24]
  92 0038 42F00402 		orr	r2, r2, #4
  93 003c 9A61     		str	r2, [r3, #24]
  94              		.loc 1 460 3 view .LVU18
  95 003e 9A69     		ldr	r2, [r3, #24]
  96 0040 02F00402 		and	r2, r2, #4
  97 0044 0392     		str	r2, [sp, #12]
  98              		.loc 1 460 3 view .LVU19
  99 0046 039A     		ldr	r2, [sp, #12]
 100              	.LBE4:
 101              		.loc 1 460 3 view .LVU20
 461:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 102              		.loc 1 461 3 view .LVU21
 103              	.LBB5:
 104              		.loc 1 461 3 view .LVU22
 105              		.loc 1 461 3 view .LVU23
 106 0048 9A69     		ldr	r2, [r3, #24]
 107 004a 42F00802 		orr	r2, r2, #8
 108 004e 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccvgpFwF.s 			page 11


 109              		.loc 1 461 3 view .LVU24
 110 0050 9A69     		ldr	r2, [r3, #24]
 111 0052 02F00802 		and	r2, r2, #8
 112 0056 0492     		str	r2, [sp, #16]
 113              		.loc 1 461 3 view .LVU25
 114 0058 049A     		ldr	r2, [sp, #16]
 115              	.LBE5:
 116              		.loc 1 461 3 view .LVU26
 462:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 117              		.loc 1 462 3 view .LVU27
 118              	.LBB6:
 119              		.loc 1 462 3 view .LVU28
 120              		.loc 1 462 3 view .LVU29
 121 005a 9A69     		ldr	r2, [r3, #24]
 122 005c 42F02002 		orr	r2, r2, #32
 123 0060 9A61     		str	r2, [r3, #24]
 124              		.loc 1 462 3 view .LVU30
 125 0062 9B69     		ldr	r3, [r3, #24]
 126 0064 03F02003 		and	r3, r3, #32
 127 0068 0593     		str	r3, [sp, #20]
 128              		.loc 1 462 3 view .LVU31
 129 006a 059B     		ldr	r3, [sp, #20]
 130              	.LBE6:
 131              		.loc 1 462 3 view .LVU32
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 465:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, DB02_Pin|DB03_Pin|DB04_Pin|DB05_Pin
 132              		.loc 1 465 3 view .LVU33
 133 006c DFF838A1 		ldr	r10, .L3+12
 134 0070 0122     		movs	r2, #1
 135 0072 4FF6FF71 		movw	r1, #65535
 136 0076 5046     		mov	r0, r10
 137 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL0:
 466:Core/Src/main.c ****                           |DB06_Pin|DB07_Pin|DB08_Pin|DB09_Pin
 467:Core/Src/main.c ****                           |DB10_Pin|DB11_Pin|DB12_Pin|DB13_Pin
 468:Core/Src/main.c ****                           |DB14_Pin|DB15_Pin|DB00_Pin|DB01_Pin, GPIO_PIN_SET);
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 471:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, SD_CS_Pin|LCD_RS_Pin|LCD_WR_Pin|LCD_RD_Pin
 139              		.loc 1 471 3 view .LVU34
 140 007c 484E     		ldr	r6, .L3+4
 141 007e 0122     		movs	r2, #1
 142 0080 4EF69C01 		movw	r1, #59548
 143 0084 3046     		mov	r0, r6
 144 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL1:
 472:Core/Src/main.c ****                           |LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin, GPIO_PIN_SET);
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 475:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin|TP_CS_Pin, GPIO_PIN_SET);
 146              		.loc 1 475 3 view .LVU35
 147 008a DFF82091 		ldr	r9, .L3+16
 148 008e 0122     		movs	r2, #1
 149 0090 4FF44071 		mov	r1, #768
 150 0094 4846     		mov	r0, r9
 151 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccvgpFwF.s 			page 12


 152              	.LVL2:
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 478:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, USB_PWR_Pin|F_CS_Pin, GPIO_PIN_SET);
 153              		.loc 1 478 3 view .LVU36
 154 009a DFF81481 		ldr	r8, .L3+20
 155 009e 0122     		movs	r2, #1
 156 00a0 4FF44071 		mov	r1, #768
 157 00a4 4046     		mov	r0, r8
 158 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 159              	.LVL3:
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /*Configure GPIO pins : DB02_Pin DB03_Pin DB04_Pin DB05_Pin
 481:Core/Src/main.c ****                            DB06_Pin DB07_Pin DB08_Pin DB09_Pin
 482:Core/Src/main.c ****                            DB10_Pin DB11_Pin DB12_Pin DB13_Pin
 483:Core/Src/main.c ****                            DB14_Pin DB15_Pin DB00_Pin DB01_Pin */
 484:Core/Src/main.c ****   GPIO_InitStruct.Pin = DB02_Pin|DB03_Pin|DB04_Pin|DB05_Pin
 160              		.loc 1 484 3 view .LVU37
 161              		.loc 1 484 23 is_stmt 0 view .LVU38
 162 00aa 4FF6FF73 		movw	r3, #65535
 163 00ae 0693     		str	r3, [sp, #24]
 485:Core/Src/main.c ****                           |DB06_Pin|DB07_Pin|DB08_Pin|DB09_Pin
 486:Core/Src/main.c ****                           |DB10_Pin|DB11_Pin|DB12_Pin|DB13_Pin
 487:Core/Src/main.c ****                           |DB14_Pin|DB15_Pin|DB00_Pin|DB01_Pin;
 488:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 488 3 is_stmt 1 view .LVU39
 165              		.loc 1 488 24 is_stmt 0 view .LVU40
 166 00b0 0125     		movs	r5, #1
 167 00b2 0795     		str	r5, [sp, #28]
 489:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 489 3 is_stmt 1 view .LVU41
 169              		.loc 1 489 24 is_stmt 0 view .LVU42
 170 00b4 0894     		str	r4, [sp, #32]
 490:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 171              		.loc 1 490 3 is_stmt 1 view .LVU43
 172              		.loc 1 490 25 is_stmt 0 view .LVU44
 173 00b6 0327     		movs	r7, #3
 174 00b8 0997     		str	r7, [sp, #36]
 491:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 175              		.loc 1 491 3 is_stmt 1 view .LVU45
 176 00ba 06A9     		add	r1, sp, #24
 177 00bc 5046     		mov	r0, r10
 178 00be FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL4:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /*Configure GPIO pins : Key_temper_Pin Key2_Pin RMII_INT_Pin */
 494:Core/Src/main.c ****   GPIO_InitStruct.Pin = Key_temper_Pin|Key2_Pin|RMII_INT_Pin;
 180              		.loc 1 494 3 view .LVU46
 181              		.loc 1 494 23 is_stmt 0 view .LVU47
 182 00c2 42F23003 		movw	r3, #8240
 183 00c6 0693     		str	r3, [sp, #24]
 495:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 184              		.loc 1 495 3 is_stmt 1 view .LVU48
 185              		.loc 1 495 24 is_stmt 0 view .LVU49
 186 00c8 0794     		str	r4, [sp, #28]
 496:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 496 3 is_stmt 1 view .LVU50
ARM GAS  /tmp/ccvgpFwF.s 			page 13


 188              		.loc 1 496 24 is_stmt 0 view .LVU51
 189 00ca 0894     		str	r4, [sp, #32]
 497:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 190              		.loc 1 497 3 is_stmt 1 view .LVU52
 191 00cc 06A9     		add	r1, sp, #24
 192 00ce 4846     		mov	r0, r9
 193 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 194              	.LVL5:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /*Configure GPIO pins : Wakeup_Pin USB_ID_Pin */
 500:Core/Src/main.c ****   GPIO_InitStruct.Pin = Wakeup_Pin|USB_ID_Pin;
 195              		.loc 1 500 3 view .LVU53
 196              		.loc 1 500 23 is_stmt 0 view .LVU54
 197 00d4 40F20143 		movw	r3, #1025
 198 00d8 0693     		str	r3, [sp, #24]
 501:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 199              		.loc 1 501 3 is_stmt 1 view .LVU55
 200              		.loc 1 501 24 is_stmt 0 view .LVU56
 201 00da 0794     		str	r4, [sp, #28]
 502:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 202              		.loc 1 502 3 is_stmt 1 view .LVU57
 203              		.loc 1 502 24 is_stmt 0 view .LVU58
 204 00dc 0894     		str	r4, [sp, #32]
 503:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 205              		.loc 1 503 3 is_stmt 1 view .LVU59
 206 00de DFF8D4B0 		ldr	fp, .L3+24
 207 00e2 06A9     		add	r1, sp, #24
 208 00e4 5846     		mov	r0, fp
 209 00e6 FFF7FEFF 		bl	HAL_GPIO_Init
 210              	.LVL6:
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /*Configure GPIO pins : Key_Pin SD_CD_Pin */
 506:Core/Src/main.c ****   GPIO_InitStruct.Pin = Key_Pin|SD_CD_Pin;
 211              		.loc 1 506 3 view .LVU60
 212              		.loc 1 506 23 is_stmt 0 view .LVU61
 213 00ea 4FF48843 		mov	r3, #17408
 214 00ee 0693     		str	r3, [sp, #24]
 507:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 215              		.loc 1 507 3 is_stmt 1 view .LVU62
 216              		.loc 1 507 24 is_stmt 0 view .LVU63
 217 00f0 0794     		str	r4, [sp, #28]
 508:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 218              		.loc 1 508 3 is_stmt 1 view .LVU64
 219              		.loc 1 508 24 is_stmt 0 view .LVU65
 220 00f2 0894     		str	r4, [sp, #32]
 509:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 221              		.loc 1 509 3 is_stmt 1 view .LVU66
 222 00f4 06A9     		add	r1, sp, #24
 223 00f6 4046     		mov	r0, r8
 224 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 225              	.LVL7:
 510:Core/Src/main.c **** 
 511:Core/Src/main.c ****   /*Configure GPIO pins : PD8 PD9 PD10 */
 512:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 226              		.loc 1 512 3 view .LVU67
 227              		.loc 1 512 23 is_stmt 0 view .LVU68
 228 00fc 4FF4E063 		mov	r3, #1792
ARM GAS  /tmp/ccvgpFwF.s 			page 14


 229 0100 0693     		str	r3, [sp, #24]
 513:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 230              		.loc 1 513 3 is_stmt 1 view .LVU69
 231              		.loc 1 513 24 is_stmt 0 view .LVU70
 232 0102 0794     		str	r4, [sp, #28]
 514:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 233              		.loc 1 514 3 is_stmt 1 view .LVU71
 234              		.loc 1 514 24 is_stmt 0 view .LVU72
 235 0104 0894     		str	r4, [sp, #32]
 515:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 236              		.loc 1 515 3 is_stmt 1 view .LVU73
 237 0106 06A9     		add	r1, sp, #24
 238 0108 3046     		mov	r0, r6
 239 010a FFF7FEFF 		bl	HAL_GPIO_Init
 240              	.LVL8:
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /*Configure GPIO pin : SD_CS_Pin */
 518:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CS_Pin;
 241              		.loc 1 518 3 view .LVU74
 242              		.loc 1 518 23 is_stmt 0 view .LVU75
 243 010e 4FF40063 		mov	r3, #2048
 244 0112 0693     		str	r3, [sp, #24]
 519:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 245              		.loc 1 519 3 is_stmt 1 view .LVU76
 246              		.loc 1 519 24 is_stmt 0 view .LVU77
 247 0114 0795     		str	r5, [sp, #28]
 520:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 248              		.loc 1 520 3 is_stmt 1 view .LVU78
 249              		.loc 1 520 24 is_stmt 0 view .LVU79
 250 0116 0894     		str	r4, [sp, #32]
 521:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 251              		.loc 1 521 3 is_stmt 1 view .LVU80
 252              		.loc 1 521 25 is_stmt 0 view .LVU81
 253 0118 0995     		str	r5, [sp, #36]
 522:Core/Src/main.c ****   HAL_GPIO_Init(SD_CS_GPIO_Port, &GPIO_InitStruct);
 254              		.loc 1 522 3 is_stmt 1 view .LVU82
 255 011a 06A9     		add	r1, sp, #24
 256 011c 3046     		mov	r0, r6
 257 011e FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL9:
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /*Configure GPIO pins : LCD_RS_Pin LCD_WR_Pin LCD_RD_Pin */
 525:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_RS_Pin|LCD_WR_Pin|LCD_RD_Pin;
 259              		.loc 1 525 3 view .LVU83
 260              		.loc 1 525 23 is_stmt 0 view .LVU84
 261 0122 4FF46043 		mov	r3, #57344
 262 0126 0693     		str	r3, [sp, #24]
 526:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 263              		.loc 1 526 3 is_stmt 1 view .LVU85
 264              		.loc 1 526 24 is_stmt 0 view .LVU86
 265 0128 0795     		str	r5, [sp, #28]
 527:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 266              		.loc 1 527 3 is_stmt 1 view .LVU87
 267              		.loc 1 527 24 is_stmt 0 view .LVU88
 268 012a 0894     		str	r4, [sp, #32]
 528:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 269              		.loc 1 528 3 is_stmt 1 view .LVU89
ARM GAS  /tmp/ccvgpFwF.s 			page 15


 270              		.loc 1 528 25 is_stmt 0 view .LVU90
 271 012c 0997     		str	r7, [sp, #36]
 529:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 272              		.loc 1 529 3 is_stmt 1 view .LVU91
 273 012e 06A9     		add	r1, sp, #24
 274 0130 3046     		mov	r0, r6
 275 0132 FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL10:
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /*Configure GPIO pins : LCD_CS_Pin TP_CS_Pin */
 532:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_CS_Pin|TP_CS_Pin;  
 277              		.loc 1 532 3 view .LVU92
 278              		.loc 1 532 23 is_stmt 0 view .LVU93
 279 0136 4FF4407A 		mov	r10, #768
 280 013a CDF818A0 		str	r10, [sp, #24]
 533:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 281              		.loc 1 533 3 is_stmt 1 view .LVU94
 282              		.loc 1 533 24 is_stmt 0 view .LVU95
 283 013e 0795     		str	r5, [sp, #28]
 534:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 534 3 is_stmt 1 view .LVU96
 285              		.loc 1 534 24 is_stmt 0 view .LVU97
 286 0140 0894     		str	r4, [sp, #32]
 535:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 287              		.loc 1 535 3 is_stmt 1 view .LVU98
 288              		.loc 1 535 25 is_stmt 0 view .LVU99
 289 0142 0997     		str	r7, [sp, #36]
 536:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 290              		.loc 1 536 3 is_stmt 1 view .LVU100
 291 0144 06A9     		add	r1, sp, #24
 292 0146 4846     		mov	r0, r9
 293 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 294              	.LVL11:
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /*Configure GPIO pin : MCO_Pin */
 539:Core/Src/main.c ****   GPIO_InitStruct.Pin = MCO_Pin;
 295              		.loc 1 539 3 view .LVU101
 296              		.loc 1 539 23 is_stmt 0 view .LVU102
 297 014c 4FF48073 		mov	r3, #256
 298 0150 0693     		str	r3, [sp, #24]
 540:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 299              		.loc 1 540 3 is_stmt 1 view .LVU103
 300              		.loc 1 540 24 is_stmt 0 view .LVU104
 301 0152 4FF00209 		mov	r9, #2
 302 0156 CDF81C90 		str	r9, [sp, #28]
 541:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 303              		.loc 1 541 3 is_stmt 1 view .LVU105
 304              		.loc 1 541 25 is_stmt 0 view .LVU106
 305 015a 0997     		str	r7, [sp, #36]
 542:Core/Src/main.c ****   HAL_GPIO_Init(MCO_GPIO_Port, &GPIO_InitStruct);
 306              		.loc 1 542 3 is_stmt 1 view .LVU107
 307 015c 06A9     		add	r1, sp, #24
 308 015e 5846     		mov	r0, fp
 309 0160 FFF7FEFF 		bl	HAL_GPIO_Init
 310              	.LVL12:
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /*Configure GPIO pins : LED1_Pin LED2_Pin LED3_Pin LED4_Pin */
ARM GAS  /tmp/ccvgpFwF.s 			page 16


 545:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin;
 311              		.loc 1 545 3 view .LVU108
 312              		.loc 1 545 23 is_stmt 0 view .LVU109
 313 0164 9C23     		movs	r3, #156
 314 0166 0693     		str	r3, [sp, #24]
 546:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 315              		.loc 1 546 3 is_stmt 1 view .LVU110
 316              		.loc 1 546 24 is_stmt 0 view .LVU111
 317 0168 0795     		str	r5, [sp, #28]
 547:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 318              		.loc 1 547 3 is_stmt 1 view .LVU112
 319              		.loc 1 547 24 is_stmt 0 view .LVU113
 320 016a 0894     		str	r4, [sp, #32]
 548:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 321              		.loc 1 548 3 is_stmt 1 view .LVU114
 322              		.loc 1 548 25 is_stmt 0 view .LVU115
 323 016c CDF82490 		str	r9, [sp, #36]
 549:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 324              		.loc 1 549 3 is_stmt 1 view .LVU116
 325 0170 06A9     		add	r1, sp, #24
 326 0172 3046     		mov	r0, r6
 327 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 328              	.LVL13:
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /*Configure GPIO pins : USB_PWR_Pin F_CS_Pin */
 552:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PWR_Pin|F_CS_Pin;
 329              		.loc 1 552 3 view .LVU117
 330              		.loc 1 552 23 is_stmt 0 view .LVU118
 331 0178 CDF818A0 		str	r10, [sp, #24]
 553:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 332              		.loc 1 553 3 is_stmt 1 view .LVU119
 333              		.loc 1 553 24 is_stmt 0 view .LVU120
 334 017c 0795     		str	r5, [sp, #28]
 554:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 335              		.loc 1 554 3 is_stmt 1 view .LVU121
 336              		.loc 1 554 24 is_stmt 0 view .LVU122
 337 017e 0894     		str	r4, [sp, #32]
 555:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 338              		.loc 1 555 3 is_stmt 1 view .LVU123
 339              		.loc 1 555 25 is_stmt 0 view .LVU124
 340 0180 CDF82490 		str	r9, [sp, #36]
 556:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 341              		.loc 1 556 3 is_stmt 1 view .LVU125
 342 0184 06A9     		add	r1, sp, #24
 343 0186 4046     		mov	r0, r8
 344 0188 FFF7FEFF 		bl	HAL_GPIO_Init
 345              	.LVL14:
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /*Configure peripheral I/O remapping */
 559:Core/Src/main.c ****   __HAL_AFIO_REMAP_ETH_ENABLE();
 346              		.loc 1 559 3 view .LVU126
 347              	.LBB7:
 348              		.loc 1 559 3 view .LVU127
 349 018c 054A     		ldr	r2, .L3+8
 350 018e 5368     		ldr	r3, [r2, #4]
 351              	.LVL15:
 352              		.loc 1 559 3 view .LVU128
ARM GAS  /tmp/ccvgpFwF.s 			page 17


 353              		.loc 1 559 3 view .LVU129
 354 0190 43F0E463 		orr	r3, r3, #119537664
 355              	.LVL16:
 356              		.loc 1 559 3 view .LVU130
 357 0194 5360     		str	r3, [r2, #4]
 358              	.LBE7:
 359              		.loc 1 559 3 view .LVU131
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** }
 360              		.loc 1 561 1 is_stmt 0 view .LVU132
 361 0196 0BB0     		add	sp, sp, #44
 362              	.LCFI2:
 363              		.cfi_def_cfa_offset 36
 364              		@ sp needed
 365 0198 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 366              	.L4:
 367              		.align	2
 368              	.L3:
 369 019c 00100240 		.word	1073876992
 370 01a0 00140140 		.word	1073812480
 371 01a4 00000140 		.word	1073807360
 372 01a8 00180140 		.word	1073813504
 373 01ac 00100140 		.word	1073811456
 374 01b0 000C0140 		.word	1073810432
 375 01b4 00080140 		.word	1073809408
 376              		.cfi_endproc
 377              	.LFE78:
 379              		.section	.text.MX_SPI1_Init,"ax",%progbits
 380              		.align	1
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu softvfp
 386              	MX_SPI1_Init:
 387              	.LFB75:
 345:Core/Src/main.c **** 
 388              		.loc 1 345 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392 0000 08B5     		push	{r3, lr}
 393              	.LCFI3:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 3, -8
 396              		.cfi_offset 14, -4
 355:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 397              		.loc 1 355 3 view .LVU134
 355:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 398              		.loc 1 355 18 is_stmt 0 view .LVU135
 399 0002 0D48     		ldr	r0, .L7
 400 0004 0D4B     		ldr	r3, .L7+4
 401 0006 0360     		str	r3, [r0]
 356:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 402              		.loc 1 356 3 is_stmt 1 view .LVU136
 356:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 403              		.loc 1 356 19 is_stmt 0 view .LVU137
 404 0008 4FF48273 		mov	r3, #260
ARM GAS  /tmp/ccvgpFwF.s 			page 18


 405 000c 4360     		str	r3, [r0, #4]
 357:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 406              		.loc 1 357 3 is_stmt 1 view .LVU138
 357:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 407              		.loc 1 357 24 is_stmt 0 view .LVU139
 408 000e 0023     		movs	r3, #0
 409 0010 8360     		str	r3, [r0, #8]
 358:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 410              		.loc 1 358 3 is_stmt 1 view .LVU140
 358:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 411              		.loc 1 358 23 is_stmt 0 view .LVU141
 412 0012 C360     		str	r3, [r0, #12]
 359:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 413              		.loc 1 359 3 is_stmt 1 view .LVU142
 359:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 414              		.loc 1 359 26 is_stmt 0 view .LVU143
 415 0014 0222     		movs	r2, #2
 416 0016 0261     		str	r2, [r0, #16]
 360:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 417              		.loc 1 360 3 is_stmt 1 view .LVU144
 360:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 418              		.loc 1 360 23 is_stmt 0 view .LVU145
 419 0018 0122     		movs	r2, #1
 420 001a 4261     		str	r2, [r0, #20]
 361:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 421              		.loc 1 361 3 is_stmt 1 view .LVU146
 361:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 422              		.loc 1 361 18 is_stmt 0 view .LVU147
 423 001c 4FF40072 		mov	r2, #512
 424 0020 8261     		str	r2, [r0, #24]
 362:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 425              		.loc 1 362 3 is_stmt 1 view .LVU148
 362:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 426              		.loc 1 362 32 is_stmt 0 view .LVU149
 427 0022 0822     		movs	r2, #8
 428 0024 C261     		str	r2, [r0, #28]
 363:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 429              		.loc 1 363 3 is_stmt 1 view .LVU150
 363:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 430              		.loc 1 363 23 is_stmt 0 view .LVU151
 431 0026 0362     		str	r3, [r0, #32]
 364:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 432              		.loc 1 364 3 is_stmt 1 view .LVU152
 364:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 433              		.loc 1 364 21 is_stmt 0 view .LVU153
 434 0028 4362     		str	r3, [r0, #36]
 365:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 435              		.loc 1 365 3 is_stmt 1 view .LVU154
 365:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 436              		.loc 1 365 29 is_stmt 0 view .LVU155
 437 002a 8362     		str	r3, [r0, #40]
 366:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 438              		.loc 1 366 3 is_stmt 1 view .LVU156
 366:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 439              		.loc 1 366 28 is_stmt 0 view .LVU157
 440 002c 0A23     		movs	r3, #10
 441 002e C362     		str	r3, [r0, #44]
ARM GAS  /tmp/ccvgpFwF.s 			page 19


 367:Core/Src/main.c ****   {
 442              		.loc 1 367 3 is_stmt 1 view .LVU158
 367:Core/Src/main.c ****   {
 443              		.loc 1 367 7 is_stmt 0 view .LVU159
 444 0030 FFF7FEFF 		bl	HAL_SPI_Init
 445              	.LVL17:
 375:Core/Src/main.c **** 
 446              		.loc 1 375 1 view .LVU160
 447 0034 08BD     		pop	{r3, pc}
 448              	.L8:
 449 0036 00BF     		.align	2
 450              	.L7:
 451 0038 00000000 		.word	hspi1
 452 003c 00300140 		.word	1073819648
 453              		.cfi_endproc
 454              	.LFE75:
 456              		.section	.text.MX_SPI3_Init,"ax",%progbits
 457              		.align	1
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu softvfp
 463              	MX_SPI3_Init:
 464              	.LFB76:
 383:Core/Src/main.c **** 
 465              		.loc 1 383 1 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 08B5     		push	{r3, lr}
 470              	.LCFI4:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 3, -8
 473              		.cfi_offset 14, -4
 393:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 474              		.loc 1 393 3 view .LVU162
 393:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 475              		.loc 1 393 18 is_stmt 0 view .LVU163
 476 0002 0C48     		ldr	r0, .L11
 477 0004 0C4B     		ldr	r3, .L11+4
 478 0006 0360     		str	r3, [r0]
 394:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 479              		.loc 1 394 3 is_stmt 1 view .LVU164
 394:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 480              		.loc 1 394 19 is_stmt 0 view .LVU165
 481 0008 4FF48273 		mov	r3, #260
 482 000c 4360     		str	r3, [r0, #4]
 395:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 483              		.loc 1 395 3 is_stmt 1 view .LVU166
 395:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 484              		.loc 1 395 24 is_stmt 0 view .LVU167
 485 000e 0023     		movs	r3, #0
 486 0010 8360     		str	r3, [r0, #8]
 396:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 487              		.loc 1 396 3 is_stmt 1 view .LVU168
 396:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 488              		.loc 1 396 23 is_stmt 0 view .LVU169
ARM GAS  /tmp/ccvgpFwF.s 			page 20


 489 0012 C360     		str	r3, [r0, #12]
 397:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 490              		.loc 1 397 3 is_stmt 1 view .LVU170
 397:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 491              		.loc 1 397 26 is_stmt 0 view .LVU171
 492 0014 0222     		movs	r2, #2
 493 0016 0261     		str	r2, [r0, #16]
 398:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 494              		.loc 1 398 3 is_stmt 1 view .LVU172
 398:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 495              		.loc 1 398 23 is_stmt 0 view .LVU173
 496 0018 0122     		movs	r2, #1
 497 001a 4261     		str	r2, [r0, #20]
 399:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 498              		.loc 1 399 3 is_stmt 1 view .LVU174
 399:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 499              		.loc 1 399 18 is_stmt 0 view .LVU175
 500 001c 4FF40072 		mov	r2, #512
 501 0020 8261     		str	r2, [r0, #24]
 400:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 502              		.loc 1 400 3 is_stmt 1 view .LVU176
 400:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 503              		.loc 1 400 32 is_stmt 0 view .LVU177
 504 0022 C361     		str	r3, [r0, #28]
 401:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 505              		.loc 1 401 3 is_stmt 1 view .LVU178
 401:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 506              		.loc 1 401 23 is_stmt 0 view .LVU179
 507 0024 0362     		str	r3, [r0, #32]
 402:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 508              		.loc 1 402 3 is_stmt 1 view .LVU180
 402:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 509              		.loc 1 402 21 is_stmt 0 view .LVU181
 510 0026 4362     		str	r3, [r0, #36]
 403:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 511              		.loc 1 403 3 is_stmt 1 view .LVU182
 403:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 512              		.loc 1 403 29 is_stmt 0 view .LVU183
 513 0028 8362     		str	r3, [r0, #40]
 404:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 514              		.loc 1 404 3 is_stmt 1 view .LVU184
 404:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 515              		.loc 1 404 28 is_stmt 0 view .LVU185
 516 002a 0A23     		movs	r3, #10
 517 002c C362     		str	r3, [r0, #44]
 405:Core/Src/main.c ****   {
 518              		.loc 1 405 3 is_stmt 1 view .LVU186
 405:Core/Src/main.c ****   {
 519              		.loc 1 405 7 is_stmt 0 view .LVU187
 520 002e FFF7FEFF 		bl	HAL_SPI_Init
 521              	.LVL18:
 413:Core/Src/main.c **** 
 522              		.loc 1 413 1 view .LVU188
 523 0032 08BD     		pop	{r3, pc}
 524              	.L12:
 525              		.align	2
 526              	.L11:
ARM GAS  /tmp/ccvgpFwF.s 			page 21


 527 0034 00000000 		.word	hspi3
 528 0038 003C0040 		.word	1073757184
 529              		.cfi_endproc
 530              	.LFE76:
 532              		.section	.text.MX_RTC_Init,"ax",%progbits
 533              		.align	1
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 539              	MX_RTC_Init:
 540              	.LFB74:
 288:Core/Src/main.c **** 
 541              		.loc 1 288 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 8
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545 0000 10B5     		push	{r4, lr}
 546              	.LCFI5:
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 4, -8
 549              		.cfi_offset 14, -4
 550 0002 82B0     		sub	sp, sp, #8
 551              	.LCFI6:
 552              		.cfi_def_cfa_offset 16
 294:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 553              		.loc 1 294 3 view .LVU190
 294:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 554              		.loc 1 294 19 is_stmt 0 view .LVU191
 555 0004 0023     		movs	r3, #0
 556 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 557 000a 8DF80630 		strb	r3, [sp, #6]
 295:Core/Src/main.c **** 
 558              		.loc 1 295 3 is_stmt 1 view .LVU192
 295:Core/Src/main.c **** 
 559              		.loc 1 295 19 is_stmt 0 view .LVU193
 560 000e 0093     		str	r3, [sp]
 302:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 561              		.loc 1 302 3 is_stmt 1 view .LVU194
 302:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 562              		.loc 1 302 17 is_stmt 0 view .LVU195
 563 0010 144C     		ldr	r4, .L15
 564 0012 154B     		ldr	r3, .L15+4
 565 0014 2360     		str	r3, [r4]
 303:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 566              		.loc 1 303 3 is_stmt 1 view .LVU196
 303:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 567              		.loc 1 303 26 is_stmt 0 view .LVU197
 568 0016 4FF0FF33 		mov	r3, #-1
 569 001a 6360     		str	r3, [r4, #4]
 304:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 570              		.loc 1 304 3 is_stmt 1 view .LVU198
 304:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 571              		.loc 1 304 20 is_stmt 0 view .LVU199
 572 001c 4FF48073 		mov	r3, #256
 573 0020 A360     		str	r3, [r4, #8]
 305:Core/Src/main.c ****   {
ARM GAS  /tmp/ccvgpFwF.s 			page 22


 574              		.loc 1 305 3 is_stmt 1 view .LVU200
 305:Core/Src/main.c ****   {
 575              		.loc 1 305 7 is_stmt 0 view .LVU201
 576 0022 2046     		mov	r0, r4
 577 0024 FFF7FEFF 		bl	HAL_RTC_Init
 578              	.LVL19:
 316:Core/Src/main.c ****   sTime.Minutes = 0x12;
 579              		.loc 1 316 3 is_stmt 1 view .LVU202
 316:Core/Src/main.c ****   sTime.Minutes = 0x12;
 580              		.loc 1 316 15 is_stmt 0 view .LVU203
 581 0028 1523     		movs	r3, #21
 582 002a 8DF80430 		strb	r3, [sp, #4]
 317:Core/Src/main.c ****   sTime.Seconds = 0x11;
 583              		.loc 1 317 3 is_stmt 1 view .LVU204
 317:Core/Src/main.c ****   sTime.Seconds = 0x11;
 584              		.loc 1 317 17 is_stmt 0 view .LVU205
 585 002e 1223     		movs	r3, #18
 586 0030 8DF80530 		strb	r3, [sp, #5]
 318:Core/Src/main.c **** 
 587              		.loc 1 318 3 is_stmt 1 view .LVU206
 318:Core/Src/main.c **** 
 588              		.loc 1 318 17 is_stmt 0 view .LVU207
 589 0034 1123     		movs	r3, #17
 590 0036 8DF80630 		strb	r3, [sp, #6]
 320:Core/Src/main.c ****   {
 591              		.loc 1 320 3 is_stmt 1 view .LVU208
 320:Core/Src/main.c ****   {
 592              		.loc 1 320 7 is_stmt 0 view .LVU209
 593 003a 0122     		movs	r2, #1
 594 003c 01A9     		add	r1, sp, #4
 595 003e 2046     		mov	r0, r4
 596 0040 FFF7FEFF 		bl	HAL_RTC_SetTime
 597              	.LVL20:
 324:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 598              		.loc 1 324 3 is_stmt 1 view .LVU210
 324:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 599              		.loc 1 324 24 is_stmt 0 view .LVU211
 600 0044 0122     		movs	r2, #1
 601 0046 8DF80020 		strb	r2, [sp]
 325:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 602              		.loc 1 325 3 is_stmt 1 view .LVU212
 325:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 603              		.loc 1 325 22 is_stmt 0 view .LVU213
 604 004a 8DF80120 		strb	r2, [sp, #1]
 326:Core/Src/main.c ****   DateToUpdate.Year = 0x20;
 605              		.loc 1 326 3 is_stmt 1 view .LVU214
 326:Core/Src/main.c ****   DateToUpdate.Year = 0x20;
 606              		.loc 1 326 21 is_stmt 0 view .LVU215
 607 004e 8DF80220 		strb	r2, [sp, #2]
 327:Core/Src/main.c **** 
 608              		.loc 1 327 3 is_stmt 1 view .LVU216
 327:Core/Src/main.c **** 
 609              		.loc 1 327 21 is_stmt 0 view .LVU217
 610 0052 2023     		movs	r3, #32
 611 0054 8DF80330 		strb	r3, [sp, #3]
 329:Core/Src/main.c ****   {
 612              		.loc 1 329 3 is_stmt 1 view .LVU218
ARM GAS  /tmp/ccvgpFwF.s 			page 23


 329:Core/Src/main.c ****   {
 613              		.loc 1 329 7 is_stmt 0 view .LVU219
 614 0058 6946     		mov	r1, sp
 615 005a 2046     		mov	r0, r4
 616 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 617              	.LVL21:
 337:Core/Src/main.c **** 
 618              		.loc 1 337 1 view .LVU220
 619 0060 02B0     		add	sp, sp, #8
 620              	.LCFI7:
 621              		.cfi_def_cfa_offset 8
 622              		@ sp needed
 623 0062 10BD     		pop	{r4, pc}
 624              	.L16:
 625              		.align	2
 626              	.L15:
 627 0064 00000000 		.word	hrtc
 628 0068 00280040 		.word	1073752064
 629              		.cfi_endproc
 630              	.LFE74:
 632              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 633              		.align	1
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu softvfp
 639              	MX_USART2_UART_Init:
 640              	.LFB77:
 421:Core/Src/main.c **** 
 641              		.loc 1 421 1 is_stmt 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645 0000 08B5     		push	{r3, lr}
 646              	.LCFI8:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 3, -8
 649              		.cfi_offset 14, -4
 430:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 650              		.loc 1 430 3 view .LVU222
 430:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 651              		.loc 1 430 19 is_stmt 0 view .LVU223
 652 0002 0848     		ldr	r0, .L19
 653 0004 084B     		ldr	r3, .L19+4
 654 0006 0360     		str	r3, [r0]
 431:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 655              		.loc 1 431 3 is_stmt 1 view .LVU224
 431:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 656              		.loc 1 431 24 is_stmt 0 view .LVU225
 657 0008 4FF4E133 		mov	r3, #115200
 658 000c 4360     		str	r3, [r0, #4]
 432:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 659              		.loc 1 432 3 is_stmt 1 view .LVU226
 432:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 660              		.loc 1 432 26 is_stmt 0 view .LVU227
 661 000e 0023     		movs	r3, #0
 662 0010 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccvgpFwF.s 			page 24


 433:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 663              		.loc 1 433 3 is_stmt 1 view .LVU228
 433:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 664              		.loc 1 433 24 is_stmt 0 view .LVU229
 665 0012 C360     		str	r3, [r0, #12]
 434:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 666              		.loc 1 434 3 is_stmt 1 view .LVU230
 434:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 667              		.loc 1 434 22 is_stmt 0 view .LVU231
 668 0014 0361     		str	r3, [r0, #16]
 435:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 669              		.loc 1 435 3 is_stmt 1 view .LVU232
 435:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 670              		.loc 1 435 20 is_stmt 0 view .LVU233
 671 0016 0C22     		movs	r2, #12
 672 0018 4261     		str	r2, [r0, #20]
 436:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 673              		.loc 1 436 3 is_stmt 1 view .LVU234
 436:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 674              		.loc 1 436 25 is_stmt 0 view .LVU235
 675 001a 8361     		str	r3, [r0, #24]
 437:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 676              		.loc 1 437 3 is_stmt 1 view .LVU236
 437:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 677              		.loc 1 437 28 is_stmt 0 view .LVU237
 678 001c C361     		str	r3, [r0, #28]
 438:Core/Src/main.c ****   {
 679              		.loc 1 438 3 is_stmt 1 view .LVU238
 438:Core/Src/main.c ****   {
 680              		.loc 1 438 7 is_stmt 0 view .LVU239
 681 001e FFF7FEFF 		bl	HAL_UART_Init
 682              	.LVL22:
 446:Core/Src/main.c **** 
 683              		.loc 1 446 1 view .LVU240
 684 0022 08BD     		pop	{r3, pc}
 685              	.L20:
 686              		.align	2
 687              	.L19:
 688 0024 00000000 		.word	huart2
 689 0028 00440040 		.word	1073759232
 690              		.cfi_endproc
 691              	.LFE77:
 693              		.section	.text.MX_CRC_Init,"ax",%progbits
 694              		.align	1
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu softvfp
 700              	MX_CRC_Init:
 701              	.LFB72:
 228:Core/Src/main.c **** 
 702              		.loc 1 228 1 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706 0000 08B5     		push	{r3, lr}
 707              	.LCFI9:
ARM GAS  /tmp/ccvgpFwF.s 			page 25


 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 3, -8
 710              		.cfi_offset 14, -4
 237:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 711              		.loc 1 237 3 view .LVU242
 237:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 712              		.loc 1 237 17 is_stmt 0 view .LVU243
 713 0002 0348     		ldr	r0, .L23
 714 0004 034B     		ldr	r3, .L23+4
 715 0006 0360     		str	r3, [r0]
 238:Core/Src/main.c ****   {
 716              		.loc 1 238 3 is_stmt 1 view .LVU244
 238:Core/Src/main.c ****   {
 717              		.loc 1 238 7 is_stmt 0 view .LVU245
 718 0008 FFF7FEFF 		bl	HAL_CRC_Init
 719              	.LVL23:
 246:Core/Src/main.c **** 
 720              		.loc 1 246 1 view .LVU246
 721 000c 08BD     		pop	{r3, pc}
 722              	.L24:
 723 000e 00BF     		.align	2
 724              	.L23:
 725 0010 00000000 		.word	hcrc
 726 0014 00300240 		.word	1073885184
 727              		.cfi_endproc
 728              	.LFE72:
 730              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 731              		.align	2
 732              	.LC2:
 733 0000 4755495F 		.ascii	"GUI_TM_NORMAL\000"
 733      544D5F4E 
 733      4F524D41 
 733      4C00
 734 000e 0000     		.align	2
 735              	.LC3:
 736 0010 4755495F 		.ascii	"GUI_TM_REV\000"
 736      544D5F52 
 736      455600
 737 001b 00       		.align	2
 738              	.LC4:
 739 001c 4755495F 		.ascii	"GUI_TM_TRANS\000"
 739      544D5F54 
 739      52414E53 
 739      00
 740 0029 000000   		.align	2
 741              	.LC5:
 742 002c 4755495F 		.ascii	"GUI_TM_XOR\000"
 742      544D5F58 
 742      4F5200
 743 0037 00       		.align	2
 744              	.LC6:
 745 0038 4755495F 		.ascii	"GUI_TM_TRANS | GUI_TM_REV\000"
 745      544D5F54 
 745      52414E53 
 745      207C2047 
 745      55495F54 
 746 0052 0000     		.align	2
ARM GAS  /tmp/ccvgpFwF.s 			page 26


 747              	.LC7:
 748 0054 31303148 		.ascii	"101Hello World!\000"
 748      656C6C6F 
 748      20576F72 
 748      6C642100 
 749              		.section	.text.StartDefaultTask,"ax",%progbits
 750              		.align	1
 751              		.global	StartDefaultTask
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu softvfp
 757              	StartDefaultTask:
 758              	.LVL24:
 759              	.LFB79:
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** /* USER CODE END 4 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 568:Core/Src/main.c **** /**
 569:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 570:Core/Src/main.c ****   * @param  argument: Not used
 571:Core/Src/main.c ****   * @retval None
 572:Core/Src/main.c ****   */
 573:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 574:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 575:Core/Src/main.c **** {
 760              		.loc 1 575 1 is_stmt 1 view -0
 761              		.cfi_startproc
 762              		@ Volatile: function does not return.
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		.loc 1 575 1 is_stmt 0 view .LVU248
 766 0000 08B5     		push	{r3, lr}
 767              	.LCFI10:
 768              		.cfi_def_cfa_offset 8
 769              		.cfi_offset 3, -8
 770              		.cfi_offset 14, -4
 576:Core/Src/main.c ****   /* init code for USB_HOST */
 577:Core/Src/main.c ****   MX_USB_HOST_Init();
 771              		.loc 1 577 3 is_stmt 1 view .LVU249
 772 0002 FFF7FEFF 		bl	MX_USB_HOST_Init
 773              	.LVL25:
 578:Core/Src/main.c ****   
 579:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 580:Core/Src/main.c ****   GUI_Init();
 774              		.loc 1 580 3 view .LVU250
 775 0006 FFF7FEFF 		bl	GUI_Init
 776              	.LVL26:
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   // GUI_SetBkColor(GUI_BLACK);
 583:Core/Src/main.c ****   // GUI_Clear();
 584:Core/Src/main.c ****   // GUI_DispStringAt("101Hello World!", 30, 10);
 585:Core/Src/main.c ****   GUI_SetFont(&GUI_Font8x16);
 777              		.loc 1 585 3 view .LVU251
ARM GAS  /tmp/ccvgpFwF.s 			page 27


 778 000a 4048     		ldr	r0, .L28
 779 000c FFF7FEFF 		bl	GUI_SetFont
 780              	.LVL27:
 586:Core/Src/main.c **** GUI_SetBkColor(GUI_BLUE);
 781              		.loc 1 586 1 view .LVU252
 782 0010 4FF47F00 		mov	r0, #16711680
 783 0014 FFF7FEFF 		bl	GUI_SetBkColor
 784              	.LVL28:
 587:Core/Src/main.c **** GUI_Clear();
 785              		.loc 1 587 1 view .LVU253
 786 0018 FFF7FEFF 		bl	GUI_Clear
 787              	.LVL29:
 588:Core/Src/main.c **** GUI_SetPenSize(10);
 788              		.loc 1 588 1 view .LVU254
 789 001c 0A20     		movs	r0, #10
 790 001e FFF7FEFF 		bl	GUI_SetPenSize
 791              	.LVL30:
 589:Core/Src/main.c **** GUI_SetColor(GUI_RED);
 792              		.loc 1 589 1 view .LVU255
 793 0022 FF20     		movs	r0, #255
 794 0024 FFF7FEFF 		bl	GUI_SetColor
 795              	.LVL31:
 590:Core/Src/main.c **** GUI_DrawLine(80, 10, 220, 90);
 796              		.loc 1 590 1 view .LVU256
 797 0028 5A23     		movs	r3, #90
 798 002a DC22     		movs	r2, #220
 799 002c 0A21     		movs	r1, #10
 800 002e 5020     		movs	r0, #80
 801 0030 FFF7FEFF 		bl	GUI_DrawLine
 802              	.LVL32:
 591:Core/Src/main.c **** GUI_DrawLine(80, 90, 220, 10);
 803              		.loc 1 591 1 view .LVU257
 804 0034 0A23     		movs	r3, #10
 805 0036 DC22     		movs	r2, #220
 806 0038 5A21     		movs	r1, #90
 807 003a 5020     		movs	r0, #80
 808 003c FFF7FEFF 		bl	GUI_DrawLine
 809              	.LVL33:
 592:Core/Src/main.c **** GUI_SetBkColor(GUI_BLACK);
 810              		.loc 1 592 1 view .LVU258
 811 0040 0020     		movs	r0, #0
 812 0042 FFF7FEFF 		bl	GUI_SetBkColor
 813              	.LVL34:
 593:Core/Src/main.c **** GUI_SetColor(GUI_WHITE);
 814              		.loc 1 593 1 view .LVU259
 815 0046 6FF07F40 		mvn	r0, #-16777216
 816 004a FFF7FEFF 		bl	GUI_SetColor
 817              	.LVL35:
 594:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_NORMAL);
 818              		.loc 1 594 1 view .LVU260
 819 004e 0020     		movs	r0, #0
 820 0050 FFF7FEFF 		bl	GUI_SetTextMode
 821              	.LVL36:
 595:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_NORMAL" , 160, 10);
 822              		.loc 1 595 1 view .LVU261
 823 0054 0A22     		movs	r2, #10
 824 0056 A021     		movs	r1, #160
ARM GAS  /tmp/ccvgpFwF.s 			page 28


 825 0058 2D48     		ldr	r0, .L28+4
 826 005a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 827              	.LVL37:
 596:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_REV);
 828              		.loc 1 596 1 view .LVU262
 829 005e 0420     		movs	r0, #4
 830 0060 FFF7FEFF 		bl	GUI_SetTextMode
 831              	.LVL38:
 597:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_REV" , 160, 26);
 832              		.loc 1 597 1 view .LVU263
 833 0064 1A22     		movs	r2, #26
 834 0066 A021     		movs	r1, #160
 835 0068 2A48     		ldr	r0, .L28+8
 836 006a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 837              	.LVL39:
 598:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_TRANS);
 838              		.loc 1 598 1 view .LVU264
 839 006e 0220     		movs	r0, #2
 840 0070 FFF7FEFF 		bl	GUI_SetTextMode
 841              	.LVL40:
 599:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_TRANS" , 160, 42);
 842              		.loc 1 599 1 view .LVU265
 843 0074 2A22     		movs	r2, #42
 844 0076 A021     		movs	r1, #160
 845 0078 2748     		ldr	r0, .L28+12
 846 007a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 847              	.LVL41:
 600:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_XOR);
 848              		.loc 1 600 1 view .LVU266
 849 007e 0120     		movs	r0, #1
 850 0080 FFF7FEFF 		bl	GUI_SetTextMode
 851              	.LVL42:
 601:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_XOR" , 160, 58);
 852              		.loc 1 601 1 view .LVU267
 853 0084 3A22     		movs	r2, #58
 854 0086 A021     		movs	r1, #160
 855 0088 2448     		ldr	r0, .L28+16
 856 008a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 857              	.LVL43:
 602:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_TRANS | GUI_TM_REV);
 858              		.loc 1 602 1 view .LVU268
 859 008e 0620     		movs	r0, #6
 860 0090 FFF7FEFF 		bl	GUI_SetTextMode
 861              	.LVL44:
 603:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_TRANS | GUI_TM_REV", 160, 74);
 862              		.loc 1 603 1 view .LVU269
 863 0094 4A22     		movs	r2, #74
 864 0096 A021     		movs	r1, #160
 865 0098 2148     		ldr	r0, .L28+20
 866 009a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 867              	.LVL45:
 604:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 0, 0);
 868              		.loc 1 604 1 view .LVU270
 869 009e 214C     		ldr	r4, .L28+24
 870 00a0 0022     		movs	r2, #0
 871 00a2 1146     		mov	r1, r2
 872 00a4 2046     		mov	r0, r4
ARM GAS  /tmp/ccvgpFwF.s 			page 29


 873 00a6 FFF7FEFF 		bl	GUI_DispStringAt
 874              	.LVL46:
 605:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 1, 20);
 875              		.loc 1 605 1 view .LVU271
 876 00aa 1422     		movs	r2, #20
 877 00ac 0121     		movs	r1, #1
 878 00ae 2046     		mov	r0, r4
 879 00b0 FFF7FEFF 		bl	GUI_DispStringAt
 880              	.LVL47:
 606:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 5, 40);
 881              		.loc 1 606 1 view .LVU272
 882 00b4 2822     		movs	r2, #40
 883 00b6 0521     		movs	r1, #5
 884 00b8 2046     		mov	r0, r4
 885 00ba FFF7FEFF 		bl	GUI_DispStringAt
 886              	.LVL48:
 607:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 10, 60);
 887              		.loc 1 607 1 view .LVU273
 888 00be 3C22     		movs	r2, #60
 889 00c0 0A21     		movs	r1, #10
 890 00c2 2046     		mov	r0, r4
 891 00c4 FFF7FEFF 		bl	GUI_DispStringAt
 892              	.LVL49:
 608:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 20, 80);
 893              		.loc 1 608 1 view .LVU274
 894 00c8 5022     		movs	r2, #80
 895 00ca 1421     		movs	r1, #20
 896 00cc 2046     		mov	r0, r4
 897 00ce FFF7FEFF 		bl	GUI_DispStringAt
 898              	.LVL50:
 609:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 50, 100);
 899              		.loc 1 609 1 view .LVU275
 900 00d2 6422     		movs	r2, #100
 901 00d4 3221     		movs	r1, #50
 902 00d6 2046     		mov	r0, r4
 903 00d8 FFF7FEFF 		bl	GUI_DispStringAt
 904              	.LVL51:
 610:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 100, 120);
 905              		.loc 1 610 1 view .LVU276
 906 00dc 7822     		movs	r2, #120
 907 00de 6421     		movs	r1, #100
 908 00e0 2046     		mov	r0, r4
 909 00e2 FFF7FEFF 		bl	GUI_DispStringAt
 910              	.LVL52:
 611:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 200, 140);
 911              		.loc 1 611 1 view .LVU277
 912 00e6 8C22     		movs	r2, #140
 913 00e8 C821     		movs	r1, #200
 914 00ea 2046     		mov	r0, r4
 915 00ec FFF7FEFF 		bl	GUI_DispStringAt
 916              	.LVL53:
 612:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 300, 160);
 917              		.loc 1 612 1 view .LVU278
 918 00f0 A022     		movs	r2, #160
 919 00f2 4FF49671 		mov	r1, #300
 920 00f6 2046     		mov	r0, r4
 921 00f8 FFF7FEFF 		bl	GUI_DispStringAt
ARM GAS  /tmp/ccvgpFwF.s 			page 30


 922              	.LVL54:
 923              	.L26:
 613:Core/Src/main.c **** 
 614:Core/Src/main.c ****   /* Infinite loop */
 615:Core/Src/main.c ****   for(;;)
 924              		.loc 1 615 3 discriminator 1 view .LVU279
 616:Core/Src/main.c ****   {
 617:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 925              		.loc 1 617 5 discriminator 1 view .LVU280
 926 00fc 0421     		movs	r1, #4
 927 00fe 0A48     		ldr	r0, .L28+28
 928 0100 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 929              	.LVL55:
 618:Core/Src/main.c ****     osDelay(100);
 930              		.loc 1 618 5 discriminator 1 view .LVU281
 931 0104 6420     		movs	r0, #100
 932 0106 FFF7FEFF 		bl	osDelay
 933              	.LVL56:
 615:Core/Src/main.c ****   {
 934              		.loc 1 615 8 discriminator 1 view .LVU282
 935 010a F7E7     		b	.L26
 936              	.L29:
 937              		.align	2
 938              	.L28:
 939 010c 00000000 		.word	GUI_Font8x16
 940 0110 00000000 		.word	.LC2
 941 0114 10000000 		.word	.LC3
 942 0118 1C000000 		.word	.LC4
 943 011c 2C000000 		.word	.LC5
 944 0120 38000000 		.word	.LC6
 945 0124 54000000 		.word	.LC7
 946 0128 00140140 		.word	1073812480
 947              		.cfi_endproc
 948              	.LFE79:
 950              		.section	.text.SystemClock_Config,"ax",%progbits
 951              		.align	1
 952              		.global	SystemClock_Config
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu softvfp
 958              	SystemClock_Config:
 959              	.LFB71:
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 960              		.loc 1 164 1 view -0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 112
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 965              	.LCFI11:
 966              		.cfi_def_cfa_offset 20
 967              		.cfi_offset 4, -20
 968              		.cfi_offset 5, -16
 969              		.cfi_offset 6, -12
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 9DB0     		sub	sp, sp, #116
ARM GAS  /tmp/ccvgpFwF.s 			page 31


 973              	.LCFI12:
 974              		.cfi_def_cfa_offset 136
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 975              		.loc 1 165 3 view .LVU284
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 976              		.loc 1 165 22 is_stmt 0 view .LVU285
 977 0004 0024     		movs	r4, #0
 978 0006 1294     		str	r4, [sp, #72]
 979 0008 1494     		str	r4, [sp, #80]
 166:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 980              		.loc 1 166 3 is_stmt 1 view .LVU286
 166:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 981              		.loc 1 166 22 is_stmt 0 view .LVU287
 982 000a 0994     		str	r4, [sp, #36]
 983 000c 0A94     		str	r4, [sp, #40]
 984 000e 0B94     		str	r4, [sp, #44]
 985 0010 0C94     		str	r4, [sp, #48]
 986 0012 0D94     		str	r4, [sp, #52]
 167:Core/Src/main.c **** 
 987              		.loc 1 167 3 is_stmt 1 view .LVU288
 167:Core/Src/main.c **** 
 988              		.loc 1 167 28 is_stmt 0 view .LVU289
 989 0014 2022     		movs	r2, #32
 990 0016 2146     		mov	r1, r4
 991 0018 01A8     		add	r0, sp, #4
 992 001a FFF7FEFF 		bl	memset
 993              	.LVL57:
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 994              		.loc 1 172 3 is_stmt 1 view .LVU290
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 995              		.loc 1 172 36 is_stmt 0 view .LVU291
 996 001e 0923     		movs	r3, #9
 997 0020 0E93     		str	r3, [sp, #56]
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 998              		.loc 1 173 3 is_stmt 1 view .LVU292
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 999              		.loc 1 173 30 is_stmt 0 view .LVU293
 1000 0022 4FF48033 		mov	r3, #65536
 1001 0026 1093     		str	r3, [sp, #64]
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1002              		.loc 1 174 3 is_stmt 1 view .LVU294
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1003              		.loc 1 174 36 is_stmt 0 view .LVU295
 1004 0028 0422     		movs	r2, #4
 1005 002a 1192     		str	r2, [sp, #68]
 175:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1006              		.loc 1 175 3 is_stmt 1 view .LVU296
 175:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1007              		.loc 1 175 30 is_stmt 0 view .LVU297
 1008 002c 0125     		movs	r5, #1
 1009 002e 1395     		str	r5, [sp, #76]
 176:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
 1010              		.loc 1 176 3 is_stmt 1 view .LVU298
 176:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
 1011              		.loc 1 176 30 is_stmt 0 view .LVU299
 1012 0030 1595     		str	r5, [sp, #84]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccvgpFwF.s 			page 32


 1013              		.loc 1 177 3 is_stmt 1 view .LVU300
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1014              		.loc 1 177 35 is_stmt 0 view .LVU301
 1015 0032 0F93     		str	r3, [sp, #60]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1016              		.loc 1 178 3 is_stmt 1 view .LVU302
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1017              		.loc 1 178 34 is_stmt 0 view .LVU303
 1018 0034 0226     		movs	r6, #2
 1019 0036 1696     		str	r6, [sp, #88]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1020              		.loc 1 179 3 is_stmt 1 view .LVU304
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1021              		.loc 1 179 35 is_stmt 0 view .LVU305
 1022 0038 1793     		str	r3, [sp, #92]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
 1023              		.loc 1 180 3 is_stmt 1 view .LVU306
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
 1024              		.loc 1 180 32 is_stmt 0 view .LVU307
 1025 003a 4FF4E013 		mov	r3, #1835008
 1026 003e 1893     		str	r3, [sp, #96]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
 1027              		.loc 1 181 3 is_stmt 1 view .LVU308
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
 1028              		.loc 1 181 36 is_stmt 0 view .LVU309
 1029 0040 1996     		str	r6, [sp, #100]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 1030              		.loc 1 182 3 is_stmt 1 view .LVU310
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 1031              		.loc 1 182 34 is_stmt 0 view .LVU311
 1032 0042 4FF4C063 		mov	r3, #1536
 1033 0046 1A93     		str	r3, [sp, #104]
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1034              		.loc 1 183 3 is_stmt 1 view .LVU312
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1035              		.loc 1 183 42 is_stmt 0 view .LVU313
 1036 0048 4027     		movs	r7, #64
 1037 004a 1B97     		str	r7, [sp, #108]
 184:Core/Src/main.c ****   {
 1038              		.loc 1 184 3 is_stmt 1 view .LVU314
 184:Core/Src/main.c ****   {
 1039              		.loc 1 184 7 is_stmt 0 view .LVU315
 1040 004c 0EA8     		add	r0, sp, #56
 1041 004e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1042              	.LVL58:
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1043              		.loc 1 190 3 is_stmt 1 view .LVU316
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1044              		.loc 1 190 31 is_stmt 0 view .LVU317
 1045 0052 0F23     		movs	r3, #15
 1046 0054 0993     		str	r3, [sp, #36]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1047              		.loc 1 192 3 is_stmt 1 view .LVU318
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1048              		.loc 1 192 34 is_stmt 0 view .LVU319
 1049 0056 0A96     		str	r6, [sp, #40]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccvgpFwF.s 			page 33


 1050              		.loc 1 193 3 is_stmt 1 view .LVU320
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1051              		.loc 1 193 35 is_stmt 0 view .LVU321
 1052 0058 0B94     		str	r4, [sp, #44]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1053              		.loc 1 194 3 is_stmt 1 view .LVU322
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1054              		.loc 1 194 36 is_stmt 0 view .LVU323
 1055 005a 4FF48063 		mov	r3, #1024
 1056 005e 0C93     		str	r3, [sp, #48]
 195:Core/Src/main.c **** 
 1057              		.loc 1 195 3 is_stmt 1 view .LVU324
 195:Core/Src/main.c **** 
 1058              		.loc 1 195 36 is_stmt 0 view .LVU325
 1059 0060 0D94     		str	r4, [sp, #52]
 197:Core/Src/main.c ****   {
 1060              		.loc 1 197 3 is_stmt 1 view .LVU326
 197:Core/Src/main.c ****   {
 1061              		.loc 1 197 7 is_stmt 0 view .LVU327
 1062 0062 3146     		mov	r1, r6
 1063 0064 09A8     		add	r0, sp, #36
 1064 0066 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1065              	.LVL59:
 201:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1066              		.loc 1 201 3 is_stmt 1 view .LVU328
 201:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1067              		.loc 1 201 38 is_stmt 0 view .LVU329
 1068 006a 1123     		movs	r3, #17
 1069 006c 0193     		str	r3, [sp, #4]
 202:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV3;
 1070              		.loc 1 202 3 is_stmt 1 view .LVU330
 202:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV3;
 1071              		.loc 1 202 35 is_stmt 0 view .LVU331
 1072 006e 4FF40073 		mov	r3, #512
 1073 0072 0293     		str	r3, [sp, #8]
 203:Core/Src/main.c ****   PeriphClkInit.PLLI2S.PLLI2SMUL = RCC_PLLI2S_MUL10;
 1074              		.loc 1 203 3 is_stmt 1 view .LVU332
 203:Core/Src/main.c ****   PeriphClkInit.PLLI2S.PLLI2SMUL = RCC_PLLI2S_MUL10;
 1075              		.loc 1 203 35 is_stmt 0 view .LVU333
 1076 0074 0894     		str	r4, [sp, #32]
 204:Core/Src/main.c ****   PeriphClkInit.PLLI2S.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 1077              		.loc 1 204 3 is_stmt 1 view .LVU334
 204:Core/Src/main.c ****   PeriphClkInit.PLLI2S.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 1078              		.loc 1 204 34 is_stmt 0 view .LVU335
 1079 0076 4FF40043 		mov	r3, #32768
 1080 007a 0693     		str	r3, [sp, #24]
 205:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1081              		.loc 1 205 3 is_stmt 1 view .LVU336
 205:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1082              		.loc 1 205 40 is_stmt 0 view .LVU337
 1083 007c 0797     		str	r7, [sp, #28]
 206:Core/Src/main.c ****   {
 1084              		.loc 1 206 3 is_stmt 1 view .LVU338
 206:Core/Src/main.c ****   {
 1085              		.loc 1 206 7 is_stmt 0 view .LVU339
 1086 007e 01A8     		add	r0, sp, #4
 1087 0080 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
ARM GAS  /tmp/ccvgpFwF.s 			page 34


 1088              	.LVL60:
 210:Core/Src/main.c ****   /** Configure the Systick interrupt time
 1089              		.loc 1 210 3 is_stmt 1 view .LVU340
 1090 0084 2246     		mov	r2, r4
 1091 0086 4FF03061 		mov	r1, #184549376
 1092 008a 2046     		mov	r0, r4
 1093 008c FFF7FEFF 		bl	HAL_RCC_MCOConfig
 1094              	.LVL61:
 213:Core/Src/main.c ****   /** Configure the Systick interrupt time
 1095              		.loc 1 213 3 view .LVU341
 1096 0090 074A     		ldr	r2, .L32
 1097 0092 D36A     		ldr	r3, [r2, #44]
 1098 0094 23F0F003 		bic	r3, r3, #240
 1099 0098 3B43     		orrs	r3, r3, r7
 1100 009a D362     		str	r3, [r2, #44]
 216:Core/Src/main.c ****   /** Configure the Systick interrupt time
 1101              		.loc 1 216 3 view .LVU342
 1102 009c D36A     		ldr	r3, [r2, #44]
 1103 009e 23F47043 		bic	r3, r3, #61440
 1104 00a2 43F40043 		orr	r3, r3, #32768
 1105 00a6 D362     		str	r3, [r2, #44]
 219:Core/Src/main.c **** }
 1106              		.loc 1 219 3 view .LVU343
 1107 00a8 024B     		ldr	r3, .L32+4
 1108 00aa 1D60     		str	r5, [r3]
 220:Core/Src/main.c **** 
 1109              		.loc 1 220 1 is_stmt 0 view .LVU344
 1110 00ac 1DB0     		add	sp, sp, #116
 1111              	.LCFI13:
 1112              		.cfi_def_cfa_offset 20
 1113              		@ sp needed
 1114 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 1115              	.L33:
 1116              		.align	2
 1117              	.L32:
 1118 00b0 00100240 		.word	1073876992
 1119 00b4 70004242 		.word	1111621744
 1120              		.cfi_endproc
 1121              	.LFE71:
 1123              		.section	.text.main,"ax",%progbits
 1124              		.align	1
 1125              		.global	main
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu softvfp
 1131              	main:
 1132              	.LFB70:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1133              		.loc 1 87 1 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ Volatile: function does not return.
 1136              		@ args = 0, pretend = 0, frame = 32
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138 0000 00B5     		push	{lr}
 1139              	.LCFI14:
 1140              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccvgpFwF.s 			page 35


 1141              		.cfi_offset 14, -4
 1142 0002 89B0     		sub	sp, sp, #36
 1143              	.LCFI15:
 1144              		.cfi_def_cfa_offset 40
  95:Core/Src/main.c **** 
 1145              		.loc 1 95 3 view .LVU346
 1146 0004 FFF7FEFF 		bl	HAL_Init
 1147              	.LVL62:
 102:Core/Src/main.c **** 
 1148              		.loc 1 102 3 view .LVU347
 1149 0008 FFF7FEFF 		bl	SystemClock_Config
 1150              	.LVL63:
 109:Core/Src/main.c ****   MX_SPI1_Init();
 1151              		.loc 1 109 3 view .LVU348
 1152 000c FFF7FEFF 		bl	MX_GPIO_Init
 1153              	.LVL64:
 110:Core/Src/main.c ****   MX_RTC_Init();
 1154              		.loc 1 110 3 view .LVU349
 1155 0010 FFF7FEFF 		bl	MX_SPI1_Init
 1156              	.LVL65:
 111:Core/Src/main.c ****   MX_SPI3_Init();
 1157              		.loc 1 111 3 view .LVU350
 1158 0014 FFF7FEFF 		bl	MX_RTC_Init
 1159              	.LVL66:
 112:Core/Src/main.c ****   MX_USART2_UART_Init();
 1160              		.loc 1 112 3 view .LVU351
 1161 0018 FFF7FEFF 		bl	MX_SPI3_Init
 1162              	.LVL67:
 113:Core/Src/main.c ****   MX_CRC_Init();
 1163              		.loc 1 113 3 view .LVU352
 1164 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 1165              	.LVL68:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1166              		.loc 1 114 3 view .LVU353
 1167 0020 FFF7FEFF 		bl	MX_CRC_Init
 1168              	.LVL69:
 137:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1169              		.loc 1 137 3 view .LVU354
 1170 0024 01AC     		add	r4, sp, #4
 1171 0026 084D     		ldr	r5, .L37
 1172 0028 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1173 002a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1174 002c 95E80700 		ldm	r5, {r0, r1, r2}
 1175 0030 84E80700 		stm	r4, {r0, r1, r2}
 138:Core/Src/main.c **** 
 1176              		.loc 1 138 3 view .LVU355
 138:Core/Src/main.c **** 
 1177              		.loc 1 138 23 is_stmt 0 view .LVU356
 1178 0034 0021     		movs	r1, #0
 1179 0036 01A8     		add	r0, sp, #4
 1180 0038 FFF7FEFF 		bl	osThreadCreate
 1181              	.LVL70:
 138:Core/Src/main.c **** 
 1182              		.loc 1 138 21 view .LVU357
 1183 003c 034B     		ldr	r3, .L37+4
 1184 003e 1860     		str	r0, [r3]
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccvgpFwF.s 			page 36


 1185              		.loc 1 145 3 is_stmt 1 view .LVU358
 1186 0040 FFF7FEFF 		bl	osKernelStart
 1187              	.LVL71:
 1188              	.L35:
 150:Core/Src/main.c ****   {
 1189              		.loc 1 150 3 discriminator 1 view .LVU359
 155:Core/Src/main.c ****   /* USER CODE END 3 */
 1190              		.loc 1 155 3 discriminator 1 view .LVU360
 150:Core/Src/main.c ****   {
 1191              		.loc 1 150 9 discriminator 1 view .LVU361
 1192 0044 FEE7     		b	.L35
 1193              	.L38:
 1194 0046 00BF     		.align	2
 1195              	.L37:
 1196 0048 00000000 		.word	.LANCHOR0
 1197 004c 00000000 		.word	defaultTaskHandle
 1198              		.cfi_endproc
 1199              	.LFE70:
 1201              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1202              		.align	1
 1203              		.global	MX_I2C1_Init
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.fpu softvfp
 1209              	MX_I2C1_Init:
 1210              	.LFB73:
 254:Core/Src/main.c **** 
 1211              		.loc 1 254 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215 0000 08B5     		push	{r3, lr}
 1216              	.LCFI16:
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 3, -8
 1219              		.cfi_offset 14, -4
 263:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 1220              		.loc 1 263 3 view .LVU363
 263:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 1221              		.loc 1 263 18 is_stmt 0 view .LVU364
 1222 0002 0948     		ldr	r0, .L41
 1223 0004 094B     		ldr	r3, .L41+4
 1224 0006 0360     		str	r3, [r0]
 264:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1225              		.loc 1 264 3 is_stmt 1 view .LVU365
 264:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1226              		.loc 1 264 25 is_stmt 0 view .LVU366
 1227 0008 094B     		ldr	r3, .L41+8
 1228 000a 4360     		str	r3, [r0, #4]
 265:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 20;
 1229              		.loc 1 265 3 is_stmt 1 view .LVU367
 265:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 20;
 1230              		.loc 1 265 24 is_stmt 0 view .LVU368
 1231 000c 0023     		movs	r3, #0
 1232 000e 8360     		str	r3, [r0, #8]
 266:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
ARM GAS  /tmp/ccvgpFwF.s 			page 37


 1233              		.loc 1 266 3 is_stmt 1 view .LVU369
 266:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1234              		.loc 1 266 26 is_stmt 0 view .LVU370
 1235 0010 1422     		movs	r2, #20
 1236 0012 C260     		str	r2, [r0, #12]
 267:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1237              		.loc 1 267 3 is_stmt 1 view .LVU371
 267:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1238              		.loc 1 267 29 is_stmt 0 view .LVU372
 1239 0014 4FF48042 		mov	r2, #16384
 1240 0018 0261     		str	r2, [r0, #16]
 268:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1241              		.loc 1 268 3 is_stmt 1 view .LVU373
 268:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1242              		.loc 1 268 30 is_stmt 0 view .LVU374
 1243 001a 4361     		str	r3, [r0, #20]
 269:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1244              		.loc 1 269 3 is_stmt 1 view .LVU375
 269:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1245              		.loc 1 269 26 is_stmt 0 view .LVU376
 1246 001c 8361     		str	r3, [r0, #24]
 270:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1247              		.loc 1 270 3 is_stmt 1 view .LVU377
 270:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1248              		.loc 1 270 30 is_stmt 0 view .LVU378
 1249 001e C361     		str	r3, [r0, #28]
 271:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1250              		.loc 1 271 3 is_stmt 1 view .LVU379
 271:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1251              		.loc 1 271 28 is_stmt 0 view .LVU380
 1252 0020 0362     		str	r3, [r0, #32]
 272:Core/Src/main.c ****   {
 1253              		.loc 1 272 3 is_stmt 1 view .LVU381
 272:Core/Src/main.c ****   {
 1254              		.loc 1 272 7 is_stmt 0 view .LVU382
 1255 0022 FFF7FEFF 		bl	HAL_I2C_Init
 1256              	.LVL72:
 280:Core/Src/main.c **** 
 1257              		.loc 1 280 1 view .LVU383
 1258 0026 08BD     		pop	{r3, pc}
 1259              	.L42:
 1260              		.align	2
 1261              	.L41:
 1262 0028 00000000 		.word	hi2c1
 1263 002c 00540040 		.word	1073763328
 1264 0030 801A0600 		.word	400000
 1265              		.cfi_endproc
 1266              	.LFE73:
 1268              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1269              		.align	1
 1270              		.global	HAL_TIM_PeriodElapsedCallback
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1274              		.fpu softvfp
 1276              	HAL_TIM_PeriodElapsedCallback:
 1277              	.LVL73:
ARM GAS  /tmp/ccvgpFwF.s 			page 38


 1278              	.LFB80:
 619:Core/Src/main.c ****   }
 620:Core/Src/main.c ****   /* USER CODE END 5 */
 621:Core/Src/main.c **** }
 622:Core/Src/main.c **** 
 623:Core/Src/main.c **** /**
 624:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 625:Core/Src/main.c ****   * @note   This function is called  when TIM2 interrupt took place, inside
 626:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 627:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 628:Core/Src/main.c ****   * @param  htim : TIM handle
 629:Core/Src/main.c ****   * @retval None
 630:Core/Src/main.c ****   */
 631:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 632:Core/Src/main.c **** {
 1279              		.loc 1 632 1 is_stmt 1 view -0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              		.loc 1 632 1 is_stmt 0 view .LVU385
 1284 0000 08B5     		push	{r3, lr}
 1285              	.LCFI17:
 1286              		.cfi_def_cfa_offset 8
 1287              		.cfi_offset 3, -8
 1288              		.cfi_offset 14, -4
 633:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 636:Core/Src/main.c ****   if (htim->Instance == TIM2) {
 1289              		.loc 1 636 3 is_stmt 1 view .LVU386
 1290              		.loc 1 636 11 is_stmt 0 view .LVU387
 1291 0002 0368     		ldr	r3, [r0]
 1292              		.loc 1 636 6 view .LVU388
 1293 0004 B3F1804F 		cmp	r3, #1073741824
 1294 0008 00D0     		beq	.L46
 1295              	.LVL74:
 1296              	.L43:
 637:Core/Src/main.c ****     HAL_IncTick();
 638:Core/Src/main.c ****   }
 639:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 640:Core/Src/main.c **** 
 641:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 642:Core/Src/main.c **** }
 1297              		.loc 1 642 1 view .LVU389
 1298 000a 08BD     		pop	{r3, pc}
 1299              	.LVL75:
 1300              	.L46:
 637:Core/Src/main.c ****     HAL_IncTick();
 1301              		.loc 1 637 5 is_stmt 1 view .LVU390
 1302 000c FFF7FEFF 		bl	HAL_IncTick
 1303              	.LVL76:
 1304              		.loc 1 642 1 is_stmt 0 view .LVU391
 1305 0010 FBE7     		b	.L43
 1306              		.cfi_endproc
 1307              	.LFE80:
 1309              		.section	.text.Error_Handler,"ax",%progbits
 1310              		.align	1
ARM GAS  /tmp/ccvgpFwF.s 			page 39


 1311              		.global	Error_Handler
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1315              		.fpu softvfp
 1317              	Error_Handler:
 1318              	.LFB81:
 643:Core/Src/main.c **** 
 644:Core/Src/main.c **** /**
 645:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 646:Core/Src/main.c ****   * @retval None
 647:Core/Src/main.c ****   */
 648:Core/Src/main.c **** void Error_Handler(void)
 649:Core/Src/main.c **** {
 1319              		.loc 1 649 1 is_stmt 1 view -0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              		@ link register save eliminated.
 650:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 651:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 652:Core/Src/main.c **** 
 653:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 654:Core/Src/main.c **** }
 1324              		.loc 1 654 1 view .LVU393
 1325 0000 7047     		bx	lr
 1326              		.cfi_endproc
 1327              	.LFE81:
 1329              		.comm	defaultTaskHandle,4,4
 1330              		.comm	huart2,64,4
 1331              		.comm	hspi3,88,4
 1332              		.comm	hspi1,88,4
 1333              		.comm	hrtc,20,4
 1334              		.comm	hi2c1,84,4
 1335              		.comm	hcrc,8,4
 1336              		.section	.rodata
 1337              		.align	2
 1338              		.set	.LANCHOR0,. + 0
 1339              	.LC8:
 1340 0000 00000000 		.word	.LC0
 1341 0004 00000000 		.word	StartDefaultTask
 1342 0008 0000     		.short	0
 1343 000a 0000     		.space	2
 1344 000c 00000000 		.word	0
 1345 0010 80000000 		.word	128
 1346 0014 00000000 		.word	0
 1347 0018 00000000 		.word	0
 1348              		.text
 1349              	.Letext0:
 1350              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 1351              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1352              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1353              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1354              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f107xc.h"
 1355              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1356              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1357              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  /tmp/ccvgpFwF.s 			page 40


 1358              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1359              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1360              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1361              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_crc.h"
 1362              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1363              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 1364              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1365              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1366              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1367              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1368              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 1369              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1370              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1371              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1372              		.file 24 "Middlewares/ST/STemWin/inc/LCD.h"
 1373              		.file 25 "Middlewares/ST/STemWin/inc/GUI.h"
 1374              		.file 26 "Middlewares/ST/STemWin/inc/GUI_Type.h"
 1375              		.file 27 "USB_HOST/App/usb_host.h"
 1376              		.file 28 "<built-in>"
ARM GAS  /tmp/ccvgpFwF.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvgpFwF.s:13     .rodata.str1.4:0000000000000000 $d
     /tmp/ccvgpFwF.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccvgpFwF.s:27     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccvgpFwF.s:369    .text.MX_GPIO_Init:000000000000019c $d
     /tmp/ccvgpFwF.s:380    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccvgpFwF.s:386    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccvgpFwF.s:451    .text.MX_SPI1_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccvgpFwF.s:457    .text.MX_SPI3_Init:0000000000000000 $t
     /tmp/ccvgpFwF.s:463    .text.MX_SPI3_Init:0000000000000000 MX_SPI3_Init
     /tmp/ccvgpFwF.s:527    .text.MX_SPI3_Init:0000000000000034 $d
                            *COM*:0000000000000058 hspi3
     /tmp/ccvgpFwF.s:533    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccvgpFwF.s:539    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccvgpFwF.s:627    .text.MX_RTC_Init:0000000000000064 $d
                            *COM*:0000000000000014 hrtc
     /tmp/ccvgpFwF.s:633    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccvgpFwF.s:639    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccvgpFwF.s:688    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccvgpFwF.s:694    .text.MX_CRC_Init:0000000000000000 $t
     /tmp/ccvgpFwF.s:700    .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/ccvgpFwF.s:725    .text.MX_CRC_Init:0000000000000010 $d
                            *COM*:0000000000000008 hcrc
     /tmp/ccvgpFwF.s:731    .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccvgpFwF.s:750    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccvgpFwF.s:757    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccvgpFwF.s:939    .text.StartDefaultTask:000000000000010c $d
     /tmp/ccvgpFwF.s:951    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccvgpFwF.s:958    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccvgpFwF.s:1118   .text.SystemClock_Config:00000000000000b0 $d
     /tmp/ccvgpFwF.s:1124   .text.main:0000000000000000 $t
     /tmp/ccvgpFwF.s:1131   .text.main:0000000000000000 main
     /tmp/ccvgpFwF.s:1196   .text.main:0000000000000048 $d
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccvgpFwF.s:1202   .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccvgpFwF.s:1209   .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccvgpFwF.s:1262   .text.MX_I2C1_Init:0000000000000028 $d
                            *COM*:0000000000000054 hi2c1
     /tmp/ccvgpFwF.s:1269   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccvgpFwF.s:1276   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccvgpFwF.s:1310   .text.Error_Handler:0000000000000000 $t
     /tmp/ccvgpFwF.s:1317   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccvgpFwF.s:1337   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_UART_Init
HAL_CRC_Init
MX_USB_HOST_Init
ARM GAS  /tmp/ccvgpFwF.s 			page 42


GUI_Init
GUI_SetFont
GUI_SetBkColor
GUI_Clear
GUI_SetPenSize
GUI_SetColor
GUI_DrawLine
GUI_SetTextMode
GUI_DispStringHCenterAt
GUI_DispStringAt
HAL_GPIO_TogglePin
osDelay
GUI_Font8x16
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_MCOConfig
HAL_Init
osThreadCreate
osKernelStart
HAL_I2C_Init
HAL_IncTick
