ARM GAS  /tmp/ccNafqiz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.section	.rodata.str1.4,"aMS",%progbits,1
  13              		.align	2
  14              	.LC0:
  15 0000 64656661 		.ascii	"defaultTask\000"
  15      756C7454 
  15      61736B00 
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.arch armv7-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu softvfp
  27              	MX_GPIO_Init:
  28              	.LFB78:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "usb_host.h"
  24:Core/Src/main.c **** #include "GUI.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccNafqiz.s 			page 2


  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  53:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** UART_HandleTypeDef huart2;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** osThreadId defaultTaskHandle;
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** static void MX_SPI1_Init(void);
  66:Core/Src/main.c **** void MX_I2C1_Init(void);
  67:Core/Src/main.c **** static void MX_RTC_Init(void);
  68:Core/Src/main.c **** static void MX_SPI3_Init(void);
  69:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  70:Core/Src/main.c **** static void MX_CRC_Init(void);
  71:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /**
  83:Core/Src/main.c ****   * @brief  The application entry point.
  84:Core/Src/main.c ****   * @retval int
ARM GAS  /tmp/ccNafqiz.s 			page 3


  85:Core/Src/main.c ****   */
  86:Core/Src/main.c **** int main(void)
  87:Core/Src/main.c **** {
  88:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END 1 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  95:Core/Src/main.c ****   HAL_Init();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Configure the system clock */
 102:Core/Src/main.c ****   SystemClock_Config();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Initialize all configured peripherals */
 109:Core/Src/main.c ****   MX_GPIO_Init();
 110:Core/Src/main.c ****   MX_SPI1_Init();
 111:Core/Src/main.c ****   MX_RTC_Init();
 112:Core/Src/main.c ****   MX_SPI3_Init();
 113:Core/Src/main.c ****   MX_USART2_UART_Init();
 114:Core/Src/main.c ****   MX_CRC_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 120:Core/Src/main.c ****   /* add mutexes, ... */
 121:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 124:Core/Src/main.c ****   /* add semaphores, ... */
 125:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 128:Core/Src/main.c ****   /* start timers, add new ones, ... */
 129:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 132:Core/Src/main.c ****   /* add queues, ... */
 133:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Create the thread(s) */
 136:Core/Src/main.c ****   /* definition and creation of defaultTask */
 137:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 138:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 141:Core/Src/main.c ****   /* add threads, ... */
ARM GAS  /tmp/ccNafqiz.s 			page 4


 142:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Start scheduler */
 145:Core/Src/main.c ****   osKernelStart();
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     /* USER CODE END WHILE */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   /* USER CODE END 3 */
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief System Clock Configuration
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void SystemClock_Config(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 170:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 198:Core/Src/main.c ****   {
ARM GAS  /tmp/ccNafqiz.s 			page 5


 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USB;
 202:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 203:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV3;
 204:Core/Src/main.c ****   PeriphClkInit.PLLI2S.PLLI2SMUL = RCC_PLLI2S_MUL10;
 205:Core/Src/main.c ****   PeriphClkInit.PLLI2S.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 206:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO, RCC_MCO1SOURCE_PLL3CLK, RCC_MCODIV_1);
 211:Core/Src/main.c ****   /** Configure the Systick interrupt time
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c ****   __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_HSE_PREDIV2_DIV5);
 214:Core/Src/main.c ****   /** Configure the Systick interrupt time
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c ****   __HAL_RCC_PLLI2S_CONFIG(RCC_PLLI2S_MUL10);
 217:Core/Src/main.c ****   /** Configure the Systick interrupt time
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c ****   __HAL_RCC_PLLI2S_ENABLE();
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief CRC Initialization Function
 224:Core/Src/main.c ****   * @param None
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** static void MX_CRC_Init(void)
 228:Core/Src/main.c **** {
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 237:Core/Src/main.c ****   hcrc.Instance = CRC;
 238:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /**
 249:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 250:Core/Src/main.c ****   * @param None
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** void MX_I2C1_Init(void)
 254:Core/Src/main.c **** {
 255:Core/Src/main.c **** 
ARM GAS  /tmp/ccNafqiz.s 			page 6


 256:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 263:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 264:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 265:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 266:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 20;
 267:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 268:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 269:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 270:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 271:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 272:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /**
 283:Core/Src/main.c ****   * @brief RTC Initialization Function
 284:Core/Src/main.c ****   * @param None
 285:Core/Src/main.c ****   * @retval None
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c **** static void MX_RTC_Init(void)
 288:Core/Src/main.c **** {
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 295:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 300:Core/Src/main.c ****   /** Initialize RTC Only
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c ****   hrtc.Instance = RTC;
 303:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 304:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 305:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
ARM GAS  /tmp/ccNafqiz.s 			page 7


 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c ****   sTime.Hours = 0x15;
 317:Core/Src/main.c ****   sTime.Minutes = 0x12;
 318:Core/Src/main.c ****   sTime.Seconds = 0x11;
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c ****   DateToUpdate.WeekDay = RTC_WEEKDAY_MONDAY;
 325:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 326:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 327:Core/Src/main.c ****   DateToUpdate.Year = 0x20;
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &DateToUpdate, RTC_FORMAT_BCD) != HAL_OK)
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****     Error_Handler();
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /**
 340:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 341:Core/Src/main.c ****   * @param None
 342:Core/Src/main.c ****   * @retval None
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c **** static void MX_SPI1_Init(void)
 345:Core/Src/main.c **** {
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 354:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 355:Core/Src/main.c ****   hspi1.Instance = SPI1;
 356:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 357:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 358:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 359:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 360:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 361:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 362:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 363:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 364:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 365:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 366:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 367:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccNafqiz.s 			page 8


 370:Core/Src/main.c ****   }
 371:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /**
 378:Core/Src/main.c ****   * @brief SPI3 Initialization Function
 379:Core/Src/main.c ****   * @param None
 380:Core/Src/main.c ****   * @retval None
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c **** static void MX_SPI3_Init(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
 392:Core/Src/main.c ****   /* SPI3 parameter configuration*/
 393:Core/Src/main.c ****   hspi3.Instance = SPI3;
 394:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 395:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 396:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 397:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 398:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 399:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 400:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 401:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 402:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 403:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 404:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 405:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** }
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** /**
 416:Core/Src/main.c ****   * @brief USART2 Initialization Function
 417:Core/Src/main.c ****   * @param None
 418:Core/Src/main.c ****   * @retval None
 419:Core/Src/main.c ****   */
 420:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 421:Core/Src/main.c **** {
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 426:Core/Src/main.c **** 
ARM GAS  /tmp/ccNafqiz.s 			page 9


 427:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 430:Core/Src/main.c ****   huart2.Instance = USART2;
 431:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 432:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 433:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 434:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 435:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 436:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 437:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 438:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /**
 449:Core/Src/main.c ****   * @brief GPIO Initialization Function
 450:Core/Src/main.c ****   * @param None
 451:Core/Src/main.c ****   * @retval None
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c **** static void MX_GPIO_Init(void)
 454:Core/Src/main.c **** {
  30              		.loc 1 454 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 8BB0     		sub	sp, sp, #44
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 80
 455:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  49              		.loc 1 455 3 view .LVU1
  50              		.loc 1 455 20 is_stmt 0 view .LVU2
  51 0006 0024     		movs	r4, #0
  52 0008 0694     		str	r4, [sp, #24]
  53 000a 0794     		str	r4, [sp, #28]
  54 000c 0894     		str	r4, [sp, #32]
  55 000e 0994     		str	r4, [sp, #36]
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccNafqiz.s 			page 10


 458:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  56              		.loc 1 458 3 is_stmt 1 view .LVU3
  57              	.LBB2:
  58              		.loc 1 458 3 view .LVU4
  59              		.loc 1 458 3 view .LVU5
  60 0010 674B     		ldr	r3, .L3
  61 0012 9A69     		ldr	r2, [r3, #24]
  62 0014 42F04002 		orr	r2, r2, #64
  63 0018 9A61     		str	r2, [r3, #24]
  64              		.loc 1 458 3 view .LVU6
  65 001a 9A69     		ldr	r2, [r3, #24]
  66 001c 02F04002 		and	r2, r2, #64
  67 0020 0192     		str	r2, [sp, #4]
  68              		.loc 1 458 3 view .LVU7
  69 0022 019A     		ldr	r2, [sp, #4]
  70              	.LBE2:
  71              		.loc 1 458 3 view .LVU8
 459:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  72              		.loc 1 459 3 view .LVU9
  73              	.LBB3:
  74              		.loc 1 459 3 view .LVU10
  75              		.loc 1 459 3 view .LVU11
  76 0024 9A69     		ldr	r2, [r3, #24]
  77 0026 42F01002 		orr	r2, r2, #16
  78 002a 9A61     		str	r2, [r3, #24]
  79              		.loc 1 459 3 view .LVU12
  80 002c 9A69     		ldr	r2, [r3, #24]
  81 002e 02F01002 		and	r2, r2, #16
  82 0032 0292     		str	r2, [sp, #8]
  83              		.loc 1 459 3 view .LVU13
  84 0034 029A     		ldr	r2, [sp, #8]
  85              	.LBE3:
  86              		.loc 1 459 3 view .LVU14
 460:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  87              		.loc 1 460 3 view .LVU15
  88              	.LBB4:
  89              		.loc 1 460 3 view .LVU16
  90              		.loc 1 460 3 view .LVU17
  91 0036 9A69     		ldr	r2, [r3, #24]
  92 0038 42F00402 		orr	r2, r2, #4
  93 003c 9A61     		str	r2, [r3, #24]
  94              		.loc 1 460 3 view .LVU18
  95 003e 9A69     		ldr	r2, [r3, #24]
  96 0040 02F00402 		and	r2, r2, #4
  97 0044 0392     		str	r2, [sp, #12]
  98              		.loc 1 460 3 view .LVU19
  99 0046 039A     		ldr	r2, [sp, #12]
 100              	.LBE4:
 101              		.loc 1 460 3 view .LVU20
 461:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 102              		.loc 1 461 3 view .LVU21
 103              	.LBB5:
 104              		.loc 1 461 3 view .LVU22
 105              		.loc 1 461 3 view .LVU23
 106 0048 9A69     		ldr	r2, [r3, #24]
 107 004a 42F00802 		orr	r2, r2, #8
 108 004e 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccNafqiz.s 			page 11


 109              		.loc 1 461 3 view .LVU24
 110 0050 9A69     		ldr	r2, [r3, #24]
 111 0052 02F00802 		and	r2, r2, #8
 112 0056 0492     		str	r2, [sp, #16]
 113              		.loc 1 461 3 view .LVU25
 114 0058 049A     		ldr	r2, [sp, #16]
 115              	.LBE5:
 116              		.loc 1 461 3 view .LVU26
 462:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 117              		.loc 1 462 3 view .LVU27
 118              	.LBB6:
 119              		.loc 1 462 3 view .LVU28
 120              		.loc 1 462 3 view .LVU29
 121 005a 9A69     		ldr	r2, [r3, #24]
 122 005c 42F02002 		orr	r2, r2, #32
 123 0060 9A61     		str	r2, [r3, #24]
 124              		.loc 1 462 3 view .LVU30
 125 0062 9B69     		ldr	r3, [r3, #24]
 126 0064 03F02003 		and	r3, r3, #32
 127 0068 0593     		str	r3, [sp, #20]
 128              		.loc 1 462 3 view .LVU31
 129 006a 059B     		ldr	r3, [sp, #20]
 130              	.LBE6:
 131              		.loc 1 462 3 view .LVU32
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 465:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, DB02_Pin|DB03_Pin|DB04_Pin|DB05_Pin
 132              		.loc 1 465 3 view .LVU33
 133 006c DFF84CA1 		ldr	r10, .L3+12
 134 0070 0122     		movs	r2, #1
 135 0072 4FF6FF71 		movw	r1, #65535
 136 0076 5046     		mov	r0, r10
 137 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL0:
 466:Core/Src/main.c ****                           |DB06_Pin|DB07_Pin|DB08_Pin|DB09_Pin
 467:Core/Src/main.c ****                           |DB10_Pin|DB11_Pin|DB12_Pin|DB13_Pin
 468:Core/Src/main.c ****                           |DB14_Pin|DB15_Pin|DB00_Pin|DB01_Pin, GPIO_PIN_SET);
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 471:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, SD_CS_Pin|LCD_RS_Pin|LCD_WR_Pin|LCD_RD_Pin
 139              		.loc 1 471 3 view .LVU34
 140 007c 4D4E     		ldr	r6, .L3+4
 141 007e 0122     		movs	r2, #1
 142 0080 4EF69C01 		movw	r1, #59548
 143 0084 3046     		mov	r0, r6
 144 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL1:
 472:Core/Src/main.c ****                           |LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin, GPIO_PIN_SET);
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 475:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin|TP_CS_Pin, GPIO_PIN_SET);
 146              		.loc 1 475 3 view .LVU35
 147 008a DFF83491 		ldr	r9, .L3+16
 148 008e 0122     		movs	r2, #1
 149 0090 4FF44071 		mov	r1, #768
 150 0094 4846     		mov	r0, r9
 151 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccNafqiz.s 			page 12


 152              	.LVL2:
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 478:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, USB_PWR_Pin|F_CS_Pin, GPIO_PIN_SET);
 153              		.loc 1 478 3 view .LVU36
 154 009a DFF82881 		ldr	r8, .L3+20
 155 009e 0122     		movs	r2, #1
 156 00a0 4FF44071 		mov	r1, #768
 157 00a4 4046     		mov	r0, r8
 158 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 159              	.LVL3:
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /*Configure GPIO pins : DB02_Pin DB03_Pin DB04_Pin DB05_Pin
 481:Core/Src/main.c ****                            DB06_Pin DB07_Pin DB08_Pin DB09_Pin
 482:Core/Src/main.c ****                            DB10_Pin DB11_Pin DB12_Pin DB13_Pin
 483:Core/Src/main.c ****                            DB14_Pin DB15_Pin DB00_Pin DB01_Pin */
 484:Core/Src/main.c ****   GPIO_InitStruct.Pin = DB02_Pin|DB03_Pin|DB04_Pin|DB05_Pin
 160              		.loc 1 484 3 view .LVU37
 161              		.loc 1 484 23 is_stmt 0 view .LVU38
 162 00aa 4FF6FF73 		movw	r3, #65535
 163 00ae 0693     		str	r3, [sp, #24]
 485:Core/Src/main.c ****                           |DB06_Pin|DB07_Pin|DB08_Pin|DB09_Pin
 486:Core/Src/main.c ****                           |DB10_Pin|DB11_Pin|DB12_Pin|DB13_Pin
 487:Core/Src/main.c ****                           |DB14_Pin|DB15_Pin|DB00_Pin|DB01_Pin;
 488:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 488 3 is_stmt 1 view .LVU39
 165              		.loc 1 488 24 is_stmt 0 view .LVU40
 166 00b0 0125     		movs	r5, #1
 167 00b2 0795     		str	r5, [sp, #28]
 489:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 489 3 is_stmt 1 view .LVU41
 169              		.loc 1 489 24 is_stmt 0 view .LVU42
 170 00b4 0894     		str	r4, [sp, #32]
 490:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 171              		.loc 1 490 3 is_stmt 1 view .LVU43
 172              		.loc 1 490 25 is_stmt 0 view .LVU44
 173 00b6 0327     		movs	r7, #3
 174 00b8 0997     		str	r7, [sp, #36]
 491:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 175              		.loc 1 491 3 is_stmt 1 view .LVU45
 176 00ba 06A9     		add	r1, sp, #24
 177 00bc 5046     		mov	r0, r10
 178 00be FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL4:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   ////////////////////////////////////////
 494:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CD_Pin;
 180              		.loc 1 494 3 view .LVU46
 181              		.loc 1 494 23 is_stmt 0 view .LVU47
 182 00c2 4FF48043 		mov	r3, #16384
 183 00c6 0693     		str	r3, [sp, #24]
 495:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 184              		.loc 1 495 3 is_stmt 1 view .LVU48
 185              		.loc 1 495 24 is_stmt 0 view .LVU49
 186 00c8 0795     		str	r5, [sp, #28]
 496:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 496 3 is_stmt 1 view .LVU50
ARM GAS  /tmp/ccNafqiz.s 			page 13


 188              		.loc 1 496 24 is_stmt 0 view .LVU51
 189 00ca 0894     		str	r4, [sp, #32]
 497:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 190              		.loc 1 497 3 is_stmt 1 view .LVU52
 191              		.loc 1 497 25 is_stmt 0 view .LVU53
 192 00cc 0997     		str	r7, [sp, #36]
 498:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 193              		.loc 1 498 3 is_stmt 1 view .LVU54
 194 00ce 06A9     		add	r1, sp, #24
 195 00d0 4046     		mov	r0, r8
 196 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL5:
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /////////////////////////////////////////
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /*Configure GPIO pins : Key_temper_Pin Key2_Pin RMII_INT_Pin */
 503:Core/Src/main.c ****   GPIO_InitStruct.Pin = Key_temper_Pin|Key2_Pin|RMII_INT_Pin;
 198              		.loc 1 503 3 view .LVU55
 199              		.loc 1 503 23 is_stmt 0 view .LVU56
 200 00d6 42F23003 		movw	r3, #8240
 201 00da 0693     		str	r3, [sp, #24]
 504:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 202              		.loc 1 504 3 is_stmt 1 view .LVU57
 203              		.loc 1 504 24 is_stmt 0 view .LVU58
 204 00dc 0794     		str	r4, [sp, #28]
 505:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 205              		.loc 1 505 3 is_stmt 1 view .LVU59
 206              		.loc 1 505 24 is_stmt 0 view .LVU60
 207 00de 0894     		str	r4, [sp, #32]
 506:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 208              		.loc 1 506 3 is_stmt 1 view .LVU61
 209 00e0 06A9     		add	r1, sp, #24
 210 00e2 4846     		mov	r0, r9
 211 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 212              	.LVL6:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /*Configure GPIO pins : Wakeup_Pin USB_ID_Pin */
 509:Core/Src/main.c ****   GPIO_InitStruct.Pin = Wakeup_Pin|USB_ID_Pin;
 213              		.loc 1 509 3 view .LVU62
 214              		.loc 1 509 23 is_stmt 0 view .LVU63
 215 00e8 40F20143 		movw	r3, #1025
 216 00ec 0693     		str	r3, [sp, #24]
 510:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 217              		.loc 1 510 3 is_stmt 1 view .LVU64
 218              		.loc 1 510 24 is_stmt 0 view .LVU65
 219 00ee 0794     		str	r4, [sp, #28]
 511:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 511 3 is_stmt 1 view .LVU66
 221              		.loc 1 511 24 is_stmt 0 view .LVU67
 222 00f0 0894     		str	r4, [sp, #32]
 512:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 223              		.loc 1 512 3 is_stmt 1 view .LVU68
 224 00f2 DFF8D4B0 		ldr	fp, .L3+24
 225 00f6 06A9     		add	r1, sp, #24
 226 00f8 5846     		mov	r0, fp
 227 00fa FFF7FEFF 		bl	HAL_GPIO_Init
 228              	.LVL7:
ARM GAS  /tmp/ccNafqiz.s 			page 14


 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /*Configure GPIO pins : Key_Pin SD_CD_Pin */
 515:Core/Src/main.c ****   GPIO_InitStruct.Pin = Key_Pin;
 229              		.loc 1 515 3 view .LVU69
 230              		.loc 1 515 23 is_stmt 0 view .LVU70
 231 00fe 4FF48063 		mov	r3, #1024
 232 0102 0693     		str	r3, [sp, #24]
 516:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 233              		.loc 1 516 3 is_stmt 1 view .LVU71
 234              		.loc 1 516 24 is_stmt 0 view .LVU72
 235 0104 0794     		str	r4, [sp, #28]
 517:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 517 3 is_stmt 1 view .LVU73
 237              		.loc 1 517 24 is_stmt 0 view .LVU74
 238 0106 0894     		str	r4, [sp, #32]
 518:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 239              		.loc 1 518 3 is_stmt 1 view .LVU75
 240 0108 06A9     		add	r1, sp, #24
 241 010a 4046     		mov	r0, r8
 242 010c FFF7FEFF 		bl	HAL_GPIO_Init
 243              	.LVL8:
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /*Configure GPIO pins : PD8 PD9 PD10 */
 521:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 244              		.loc 1 521 3 view .LVU76
 245              		.loc 1 521 23 is_stmt 0 view .LVU77
 246 0110 4FF4E063 		mov	r3, #1792
 247 0114 0693     		str	r3, [sp, #24]
 522:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 248              		.loc 1 522 3 is_stmt 1 view .LVU78
 249              		.loc 1 522 24 is_stmt 0 view .LVU79
 250 0116 0794     		str	r4, [sp, #28]
 523:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 523 3 is_stmt 1 view .LVU80
 252              		.loc 1 523 24 is_stmt 0 view .LVU81
 253 0118 0894     		str	r4, [sp, #32]
 524:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 254              		.loc 1 524 3 is_stmt 1 view .LVU82
 255 011a 06A9     		add	r1, sp, #24
 256 011c 3046     		mov	r0, r6
 257 011e FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL9:
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /*Configure GPIO pin : SD_CS_Pin */
 527:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CS_Pin;
 259              		.loc 1 527 3 view .LVU83
 260              		.loc 1 527 23 is_stmt 0 view .LVU84
 261 0122 4FF40063 		mov	r3, #2048
 262 0126 0693     		str	r3, [sp, #24]
 528:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 263              		.loc 1 528 3 is_stmt 1 view .LVU85
 264              		.loc 1 528 24 is_stmt 0 view .LVU86
 265 0128 0795     		str	r5, [sp, #28]
 529:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 266              		.loc 1 529 3 is_stmt 1 view .LVU87
 267              		.loc 1 529 24 is_stmt 0 view .LVU88
 268 012a 0894     		str	r4, [sp, #32]
ARM GAS  /tmp/ccNafqiz.s 			page 15


 530:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 269              		.loc 1 530 3 is_stmt 1 view .LVU89
 270              		.loc 1 530 25 is_stmt 0 view .LVU90
 271 012c 0995     		str	r5, [sp, #36]
 531:Core/Src/main.c ****   HAL_GPIO_Init(SD_CS_GPIO_Port, &GPIO_InitStruct);
 272              		.loc 1 531 3 is_stmt 1 view .LVU91
 273 012e 06A9     		add	r1, sp, #24
 274 0130 3046     		mov	r0, r6
 275 0132 FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL10:
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /*Configure GPIO pins : LCD_RS_Pin LCD_WR_Pin LCD_RD_Pin */
 534:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_RS_Pin|LCD_WR_Pin|LCD_RD_Pin;
 277              		.loc 1 534 3 view .LVU92
 278              		.loc 1 534 23 is_stmt 0 view .LVU93
 279 0136 4FF46043 		mov	r3, #57344
 280 013a 0693     		str	r3, [sp, #24]
 535:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 281              		.loc 1 535 3 is_stmt 1 view .LVU94
 282              		.loc 1 535 24 is_stmt 0 view .LVU95
 283 013c 0795     		str	r5, [sp, #28]
 536:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 536 3 is_stmt 1 view .LVU96
 285              		.loc 1 536 24 is_stmt 0 view .LVU97
 286 013e 0894     		str	r4, [sp, #32]
 537:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 287              		.loc 1 537 3 is_stmt 1 view .LVU98
 288              		.loc 1 537 25 is_stmt 0 view .LVU99
 289 0140 0997     		str	r7, [sp, #36]
 538:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 290              		.loc 1 538 3 is_stmt 1 view .LVU100
 291 0142 06A9     		add	r1, sp, #24
 292 0144 3046     		mov	r0, r6
 293 0146 FFF7FEFF 		bl	HAL_GPIO_Init
 294              	.LVL11:
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /*Configure GPIO pins : LCD_CS_Pin TP_CS_Pin */
 541:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_CS_Pin|TP_CS_Pin;  
 295              		.loc 1 541 3 view .LVU101
 296              		.loc 1 541 23 is_stmt 0 view .LVU102
 297 014a 4FF4407A 		mov	r10, #768
 298 014e CDF818A0 		str	r10, [sp, #24]
 542:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 299              		.loc 1 542 3 is_stmt 1 view .LVU103
 300              		.loc 1 542 24 is_stmt 0 view .LVU104
 301 0152 0795     		str	r5, [sp, #28]
 543:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 302              		.loc 1 543 3 is_stmt 1 view .LVU105
 303              		.loc 1 543 24 is_stmt 0 view .LVU106
 304 0154 0894     		str	r4, [sp, #32]
 544:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 305              		.loc 1 544 3 is_stmt 1 view .LVU107
 306              		.loc 1 544 25 is_stmt 0 view .LVU108
 307 0156 0997     		str	r7, [sp, #36]
 545:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 308              		.loc 1 545 3 is_stmt 1 view .LVU109
 309 0158 06A9     		add	r1, sp, #24
ARM GAS  /tmp/ccNafqiz.s 			page 16


 310 015a 4846     		mov	r0, r9
 311 015c FFF7FEFF 		bl	HAL_GPIO_Init
 312              	.LVL12:
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /*Configure GPIO pin : MCO_Pin */
 548:Core/Src/main.c ****   GPIO_InitStruct.Pin = MCO_Pin;
 313              		.loc 1 548 3 view .LVU110
 314              		.loc 1 548 23 is_stmt 0 view .LVU111
 315 0160 4FF48073 		mov	r3, #256
 316 0164 0693     		str	r3, [sp, #24]
 549:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 317              		.loc 1 549 3 is_stmt 1 view .LVU112
 318              		.loc 1 549 24 is_stmt 0 view .LVU113
 319 0166 4FF00209 		mov	r9, #2
 320 016a CDF81C90 		str	r9, [sp, #28]
 550:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 321              		.loc 1 550 3 is_stmt 1 view .LVU114
 322              		.loc 1 550 25 is_stmt 0 view .LVU115
 323 016e 0997     		str	r7, [sp, #36]
 551:Core/Src/main.c ****   HAL_GPIO_Init(MCO_GPIO_Port, &GPIO_InitStruct);
 324              		.loc 1 551 3 is_stmt 1 view .LVU116
 325 0170 06A9     		add	r1, sp, #24
 326 0172 5846     		mov	r0, fp
 327 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 328              	.LVL13:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /*Configure GPIO pins : LED1_Pin LED2_Pin LED3_Pin LED4_Pin */
 554:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin;
 329              		.loc 1 554 3 view .LVU117
 330              		.loc 1 554 23 is_stmt 0 view .LVU118
 331 0178 9C23     		movs	r3, #156
 332 017a 0693     		str	r3, [sp, #24]
 555:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 333              		.loc 1 555 3 is_stmt 1 view .LVU119
 334              		.loc 1 555 24 is_stmt 0 view .LVU120
 335 017c 0795     		str	r5, [sp, #28]
 556:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 336              		.loc 1 556 3 is_stmt 1 view .LVU121
 337              		.loc 1 556 24 is_stmt 0 view .LVU122
 338 017e 0894     		str	r4, [sp, #32]
 557:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 339              		.loc 1 557 3 is_stmt 1 view .LVU123
 340              		.loc 1 557 25 is_stmt 0 view .LVU124
 341 0180 CDF82490 		str	r9, [sp, #36]
 558:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 342              		.loc 1 558 3 is_stmt 1 view .LVU125
 343 0184 06A9     		add	r1, sp, #24
 344 0186 3046     		mov	r0, r6
 345 0188 FFF7FEFF 		bl	HAL_GPIO_Init
 346              	.LVL14:
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /*Configure GPIO pins : USB_PWR_Pin F_CS_Pin */
 561:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PWR_Pin|F_CS_Pin;
 347              		.loc 1 561 3 view .LVU126
 348              		.loc 1 561 23 is_stmt 0 view .LVU127
 349 018c CDF818A0 		str	r10, [sp, #24]
 562:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccNafqiz.s 			page 17


 350              		.loc 1 562 3 is_stmt 1 view .LVU128
 351              		.loc 1 562 24 is_stmt 0 view .LVU129
 352 0190 0795     		str	r5, [sp, #28]
 563:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 353              		.loc 1 563 3 is_stmt 1 view .LVU130
 354              		.loc 1 563 24 is_stmt 0 view .LVU131
 355 0192 0894     		str	r4, [sp, #32]
 564:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 356              		.loc 1 564 3 is_stmt 1 view .LVU132
 357              		.loc 1 564 25 is_stmt 0 view .LVU133
 358 0194 CDF82490 		str	r9, [sp, #36]
 565:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 359              		.loc 1 565 3 is_stmt 1 view .LVU134
 360 0198 06A9     		add	r1, sp, #24
 361 019a 4046     		mov	r0, r8
 362 019c FFF7FEFF 		bl	HAL_GPIO_Init
 363              	.LVL15:
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /*Configure peripheral I/O remapping */
 568:Core/Src/main.c ****   __HAL_AFIO_REMAP_ETH_ENABLE();
 364              		.loc 1 568 3 view .LVU135
 365              	.LBB7:
 366              		.loc 1 568 3 view .LVU136
 367 01a0 054A     		ldr	r2, .L3+8
 368 01a2 5368     		ldr	r3, [r2, #4]
 369              	.LVL16:
 370              		.loc 1 568 3 view .LVU137
 371              		.loc 1 568 3 view .LVU138
 372 01a4 43F0E463 		orr	r3, r3, #119537664
 373              	.LVL17:
 374              		.loc 1 568 3 view .LVU139
 375 01a8 5360     		str	r3, [r2, #4]
 376              	.LBE7:
 377              		.loc 1 568 3 view .LVU140
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** }
 378              		.loc 1 570 1 is_stmt 0 view .LVU141
 379 01aa 0BB0     		add	sp, sp, #44
 380              	.LCFI2:
 381              		.cfi_def_cfa_offset 36
 382              		@ sp needed
 383 01ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 384              	.L4:
 385              		.align	2
 386              	.L3:
 387 01b0 00100240 		.word	1073876992
 388 01b4 00140140 		.word	1073812480
 389 01b8 00000140 		.word	1073807360
 390 01bc 00180140 		.word	1073813504
 391 01c0 00100140 		.word	1073811456
 392 01c4 000C0140 		.word	1073810432
 393 01c8 00080140 		.word	1073809408
 394              		.cfi_endproc
 395              	.LFE78:
 397              		.section	.text.MX_SPI1_Init,"ax",%progbits
 398              		.align	1
 399              		.syntax unified
ARM GAS  /tmp/ccNafqiz.s 			page 18


 400              		.thumb
 401              		.thumb_func
 402              		.fpu softvfp
 404              	MX_SPI1_Init:
 405              	.LFB75:
 345:Core/Src/main.c **** 
 406              		.loc 1 345 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI3:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 355:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 415              		.loc 1 355 3 view .LVU143
 355:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 416              		.loc 1 355 18 is_stmt 0 view .LVU144
 417 0002 0D48     		ldr	r0, .L7
 418 0004 0D4B     		ldr	r3, .L7+4
 419 0006 0360     		str	r3, [r0]
 356:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 420              		.loc 1 356 3 is_stmt 1 view .LVU145
 356:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 421              		.loc 1 356 19 is_stmt 0 view .LVU146
 422 0008 4FF48273 		mov	r3, #260
 423 000c 4360     		str	r3, [r0, #4]
 357:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 424              		.loc 1 357 3 is_stmt 1 view .LVU147
 357:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 425              		.loc 1 357 24 is_stmt 0 view .LVU148
 426 000e 0023     		movs	r3, #0
 427 0010 8360     		str	r3, [r0, #8]
 358:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 428              		.loc 1 358 3 is_stmt 1 view .LVU149
 358:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 429              		.loc 1 358 23 is_stmt 0 view .LVU150
 430 0012 C360     		str	r3, [r0, #12]
 359:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 431              		.loc 1 359 3 is_stmt 1 view .LVU151
 359:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 432              		.loc 1 359 26 is_stmt 0 view .LVU152
 433 0014 0222     		movs	r2, #2
 434 0016 0261     		str	r2, [r0, #16]
 360:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 435              		.loc 1 360 3 is_stmt 1 view .LVU153
 360:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 436              		.loc 1 360 23 is_stmt 0 view .LVU154
 437 0018 0122     		movs	r2, #1
 438 001a 4261     		str	r2, [r0, #20]
 361:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 439              		.loc 1 361 3 is_stmt 1 view .LVU155
 361:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 440              		.loc 1 361 18 is_stmt 0 view .LVU156
 441 001c 4FF40072 		mov	r2, #512
 442 0020 8261     		str	r2, [r0, #24]
ARM GAS  /tmp/ccNafqiz.s 			page 19


 362:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 443              		.loc 1 362 3 is_stmt 1 view .LVU157
 362:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 444              		.loc 1 362 32 is_stmt 0 view .LVU158
 445 0022 0822     		movs	r2, #8
 446 0024 C261     		str	r2, [r0, #28]
 363:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 447              		.loc 1 363 3 is_stmt 1 view .LVU159
 363:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 448              		.loc 1 363 23 is_stmt 0 view .LVU160
 449 0026 0362     		str	r3, [r0, #32]
 364:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 450              		.loc 1 364 3 is_stmt 1 view .LVU161
 364:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 451              		.loc 1 364 21 is_stmt 0 view .LVU162
 452 0028 4362     		str	r3, [r0, #36]
 365:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 453              		.loc 1 365 3 is_stmt 1 view .LVU163
 365:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 454              		.loc 1 365 29 is_stmt 0 view .LVU164
 455 002a 8362     		str	r3, [r0, #40]
 366:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 456              		.loc 1 366 3 is_stmt 1 view .LVU165
 366:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 457              		.loc 1 366 28 is_stmt 0 view .LVU166
 458 002c 0A23     		movs	r3, #10
 459 002e C362     		str	r3, [r0, #44]
 367:Core/Src/main.c ****   {
 460              		.loc 1 367 3 is_stmt 1 view .LVU167
 367:Core/Src/main.c ****   {
 461              		.loc 1 367 7 is_stmt 0 view .LVU168
 462 0030 FFF7FEFF 		bl	HAL_SPI_Init
 463              	.LVL18:
 375:Core/Src/main.c **** 
 464              		.loc 1 375 1 view .LVU169
 465 0034 08BD     		pop	{r3, pc}
 466              	.L8:
 467 0036 00BF     		.align	2
 468              	.L7:
 469 0038 00000000 		.word	hspi1
 470 003c 00300140 		.word	1073819648
 471              		.cfi_endproc
 472              	.LFE75:
 474              		.section	.text.MX_SPI3_Init,"ax",%progbits
 475              		.align	1
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu softvfp
 481              	MX_SPI3_Init:
 482              	.LFB76:
 383:Core/Src/main.c **** 
 483              		.loc 1 383 1 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccNafqiz.s 			page 20


 488              	.LCFI4:
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 3, -8
 491              		.cfi_offset 14, -4
 393:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 492              		.loc 1 393 3 view .LVU171
 393:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 493              		.loc 1 393 18 is_stmt 0 view .LVU172
 494 0002 0C48     		ldr	r0, .L11
 495 0004 0C4B     		ldr	r3, .L11+4
 496 0006 0360     		str	r3, [r0]
 394:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 497              		.loc 1 394 3 is_stmt 1 view .LVU173
 394:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 498              		.loc 1 394 19 is_stmt 0 view .LVU174
 499 0008 4FF48273 		mov	r3, #260
 500 000c 4360     		str	r3, [r0, #4]
 395:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 501              		.loc 1 395 3 is_stmt 1 view .LVU175
 395:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 502              		.loc 1 395 24 is_stmt 0 view .LVU176
 503 000e 0023     		movs	r3, #0
 504 0010 8360     		str	r3, [r0, #8]
 396:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 505              		.loc 1 396 3 is_stmt 1 view .LVU177
 396:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 506              		.loc 1 396 23 is_stmt 0 view .LVU178
 507 0012 C360     		str	r3, [r0, #12]
 397:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 508              		.loc 1 397 3 is_stmt 1 view .LVU179
 397:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 509              		.loc 1 397 26 is_stmt 0 view .LVU180
 510 0014 0222     		movs	r2, #2
 511 0016 0261     		str	r2, [r0, #16]
 398:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 512              		.loc 1 398 3 is_stmt 1 view .LVU181
 398:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 513              		.loc 1 398 23 is_stmt 0 view .LVU182
 514 0018 0122     		movs	r2, #1
 515 001a 4261     		str	r2, [r0, #20]
 399:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 516              		.loc 1 399 3 is_stmt 1 view .LVU183
 399:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 517              		.loc 1 399 18 is_stmt 0 view .LVU184
 518 001c 4FF40072 		mov	r2, #512
 519 0020 8261     		str	r2, [r0, #24]
 400:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 520              		.loc 1 400 3 is_stmt 1 view .LVU185
 400:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 521              		.loc 1 400 32 is_stmt 0 view .LVU186
 522 0022 C361     		str	r3, [r0, #28]
 401:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 523              		.loc 1 401 3 is_stmt 1 view .LVU187
 401:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 524              		.loc 1 401 23 is_stmt 0 view .LVU188
 525 0024 0362     		str	r3, [r0, #32]
 402:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  /tmp/ccNafqiz.s 			page 21


 526              		.loc 1 402 3 is_stmt 1 view .LVU189
 402:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 527              		.loc 1 402 21 is_stmt 0 view .LVU190
 528 0026 4362     		str	r3, [r0, #36]
 403:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 529              		.loc 1 403 3 is_stmt 1 view .LVU191
 403:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 530              		.loc 1 403 29 is_stmt 0 view .LVU192
 531 0028 8362     		str	r3, [r0, #40]
 404:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 532              		.loc 1 404 3 is_stmt 1 view .LVU193
 404:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 533              		.loc 1 404 28 is_stmt 0 view .LVU194
 534 002a 0A23     		movs	r3, #10
 535 002c C362     		str	r3, [r0, #44]
 405:Core/Src/main.c ****   {
 536              		.loc 1 405 3 is_stmt 1 view .LVU195
 405:Core/Src/main.c ****   {
 537              		.loc 1 405 7 is_stmt 0 view .LVU196
 538 002e FFF7FEFF 		bl	HAL_SPI_Init
 539              	.LVL19:
 413:Core/Src/main.c **** 
 540              		.loc 1 413 1 view .LVU197
 541 0032 08BD     		pop	{r3, pc}
 542              	.L12:
 543              		.align	2
 544              	.L11:
 545 0034 00000000 		.word	hspi3
 546 0038 003C0040 		.word	1073757184
 547              		.cfi_endproc
 548              	.LFE76:
 550              		.section	.text.MX_RTC_Init,"ax",%progbits
 551              		.align	1
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu softvfp
 557              	MX_RTC_Init:
 558              	.LFB74:
 288:Core/Src/main.c **** 
 559              		.loc 1 288 1 is_stmt 1 view -0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563 0000 10B5     		push	{r4, lr}
 564              	.LCFI5:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 4, -8
 567              		.cfi_offset 14, -4
 568 0002 82B0     		sub	sp, sp, #8
 569              	.LCFI6:
 570              		.cfi_def_cfa_offset 16
 294:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 571              		.loc 1 294 3 view .LVU199
 294:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 572              		.loc 1 294 19 is_stmt 0 view .LVU200
 573 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccNafqiz.s 			page 22


 574 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 575 000a 8DF80630 		strb	r3, [sp, #6]
 295:Core/Src/main.c **** 
 576              		.loc 1 295 3 is_stmt 1 view .LVU201
 295:Core/Src/main.c **** 
 577              		.loc 1 295 19 is_stmt 0 view .LVU202
 578 000e 0093     		str	r3, [sp]
 302:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 579              		.loc 1 302 3 is_stmt 1 view .LVU203
 302:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 580              		.loc 1 302 17 is_stmt 0 view .LVU204
 581 0010 144C     		ldr	r4, .L15
 582 0012 154B     		ldr	r3, .L15+4
 583 0014 2360     		str	r3, [r4]
 303:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 584              		.loc 1 303 3 is_stmt 1 view .LVU205
 303:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 585              		.loc 1 303 26 is_stmt 0 view .LVU206
 586 0016 4FF0FF33 		mov	r3, #-1
 587 001a 6360     		str	r3, [r4, #4]
 304:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 588              		.loc 1 304 3 is_stmt 1 view .LVU207
 304:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 589              		.loc 1 304 20 is_stmt 0 view .LVU208
 590 001c 4FF48073 		mov	r3, #256
 591 0020 A360     		str	r3, [r4, #8]
 305:Core/Src/main.c ****   {
 592              		.loc 1 305 3 is_stmt 1 view .LVU209
 305:Core/Src/main.c ****   {
 593              		.loc 1 305 7 is_stmt 0 view .LVU210
 594 0022 2046     		mov	r0, r4
 595 0024 FFF7FEFF 		bl	HAL_RTC_Init
 596              	.LVL20:
 316:Core/Src/main.c ****   sTime.Minutes = 0x12;
 597              		.loc 1 316 3 is_stmt 1 view .LVU211
 316:Core/Src/main.c ****   sTime.Minutes = 0x12;
 598              		.loc 1 316 15 is_stmt 0 view .LVU212
 599 0028 1523     		movs	r3, #21
 600 002a 8DF80430 		strb	r3, [sp, #4]
 317:Core/Src/main.c ****   sTime.Seconds = 0x11;
 601              		.loc 1 317 3 is_stmt 1 view .LVU213
 317:Core/Src/main.c ****   sTime.Seconds = 0x11;
 602              		.loc 1 317 17 is_stmt 0 view .LVU214
 603 002e 1223     		movs	r3, #18
 604 0030 8DF80530 		strb	r3, [sp, #5]
 318:Core/Src/main.c **** 
 605              		.loc 1 318 3 is_stmt 1 view .LVU215
 318:Core/Src/main.c **** 
 606              		.loc 1 318 17 is_stmt 0 view .LVU216
 607 0034 1123     		movs	r3, #17
 608 0036 8DF80630 		strb	r3, [sp, #6]
 320:Core/Src/main.c ****   {
 609              		.loc 1 320 3 is_stmt 1 view .LVU217
 320:Core/Src/main.c ****   {
 610              		.loc 1 320 7 is_stmt 0 view .LVU218
 611 003a 0122     		movs	r2, #1
 612 003c 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccNafqiz.s 			page 23


 613 003e 2046     		mov	r0, r4
 614 0040 FFF7FEFF 		bl	HAL_RTC_SetTime
 615              	.LVL21:
 324:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 616              		.loc 1 324 3 is_stmt 1 view .LVU219
 324:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 617              		.loc 1 324 24 is_stmt 0 view .LVU220
 618 0044 0122     		movs	r2, #1
 619 0046 8DF80020 		strb	r2, [sp]
 325:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 620              		.loc 1 325 3 is_stmt 1 view .LVU221
 325:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 621              		.loc 1 325 22 is_stmt 0 view .LVU222
 622 004a 8DF80120 		strb	r2, [sp, #1]
 326:Core/Src/main.c ****   DateToUpdate.Year = 0x20;
 623              		.loc 1 326 3 is_stmt 1 view .LVU223
 326:Core/Src/main.c ****   DateToUpdate.Year = 0x20;
 624              		.loc 1 326 21 is_stmt 0 view .LVU224
 625 004e 8DF80220 		strb	r2, [sp, #2]
 327:Core/Src/main.c **** 
 626              		.loc 1 327 3 is_stmt 1 view .LVU225
 327:Core/Src/main.c **** 
 627              		.loc 1 327 21 is_stmt 0 view .LVU226
 628 0052 2023     		movs	r3, #32
 629 0054 8DF80330 		strb	r3, [sp, #3]
 329:Core/Src/main.c ****   {
 630              		.loc 1 329 3 is_stmt 1 view .LVU227
 329:Core/Src/main.c ****   {
 631              		.loc 1 329 7 is_stmt 0 view .LVU228
 632 0058 6946     		mov	r1, sp
 633 005a 2046     		mov	r0, r4
 634 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 635              	.LVL22:
 337:Core/Src/main.c **** 
 636              		.loc 1 337 1 view .LVU229
 637 0060 02B0     		add	sp, sp, #8
 638              	.LCFI7:
 639              		.cfi_def_cfa_offset 8
 640              		@ sp needed
 641 0062 10BD     		pop	{r4, pc}
 642              	.L16:
 643              		.align	2
 644              	.L15:
 645 0064 00000000 		.word	hrtc
 646 0068 00280040 		.word	1073752064
 647              		.cfi_endproc
 648              	.LFE74:
 650              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 651              		.align	1
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu softvfp
 657              	MX_USART2_UART_Init:
 658              	.LFB77:
 421:Core/Src/main.c **** 
 659              		.loc 1 421 1 is_stmt 1 view -0
ARM GAS  /tmp/ccNafqiz.s 			page 24


 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663 0000 08B5     		push	{r3, lr}
 664              	.LCFI8:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 3, -8
 667              		.cfi_offset 14, -4
 430:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 668              		.loc 1 430 3 view .LVU231
 430:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 669              		.loc 1 430 19 is_stmt 0 view .LVU232
 670 0002 0848     		ldr	r0, .L19
 671 0004 084B     		ldr	r3, .L19+4
 672 0006 0360     		str	r3, [r0]
 431:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 673              		.loc 1 431 3 is_stmt 1 view .LVU233
 431:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 674              		.loc 1 431 24 is_stmt 0 view .LVU234
 675 0008 4FF4E133 		mov	r3, #115200
 676 000c 4360     		str	r3, [r0, #4]
 432:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 677              		.loc 1 432 3 is_stmt 1 view .LVU235
 432:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 678              		.loc 1 432 26 is_stmt 0 view .LVU236
 679 000e 0023     		movs	r3, #0
 680 0010 8360     		str	r3, [r0, #8]
 433:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 681              		.loc 1 433 3 is_stmt 1 view .LVU237
 433:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 682              		.loc 1 433 24 is_stmt 0 view .LVU238
 683 0012 C360     		str	r3, [r0, #12]
 434:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 684              		.loc 1 434 3 is_stmt 1 view .LVU239
 434:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 685              		.loc 1 434 22 is_stmt 0 view .LVU240
 686 0014 0361     		str	r3, [r0, #16]
 435:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 687              		.loc 1 435 3 is_stmt 1 view .LVU241
 435:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 688              		.loc 1 435 20 is_stmt 0 view .LVU242
 689 0016 0C22     		movs	r2, #12
 690 0018 4261     		str	r2, [r0, #20]
 436:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 691              		.loc 1 436 3 is_stmt 1 view .LVU243
 436:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 692              		.loc 1 436 25 is_stmt 0 view .LVU244
 693 001a 8361     		str	r3, [r0, #24]
 437:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 694              		.loc 1 437 3 is_stmt 1 view .LVU245
 437:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 695              		.loc 1 437 28 is_stmt 0 view .LVU246
 696 001c C361     		str	r3, [r0, #28]
 438:Core/Src/main.c ****   {
 697              		.loc 1 438 3 is_stmt 1 view .LVU247
 438:Core/Src/main.c ****   {
 698              		.loc 1 438 7 is_stmt 0 view .LVU248
ARM GAS  /tmp/ccNafqiz.s 			page 25


 699 001e FFF7FEFF 		bl	HAL_UART_Init
 700              	.LVL23:
 446:Core/Src/main.c **** 
 701              		.loc 1 446 1 view .LVU249
 702 0022 08BD     		pop	{r3, pc}
 703              	.L20:
 704              		.align	2
 705              	.L19:
 706 0024 00000000 		.word	huart2
 707 0028 00440040 		.word	1073759232
 708              		.cfi_endproc
 709              	.LFE77:
 711              		.section	.text.MX_CRC_Init,"ax",%progbits
 712              		.align	1
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 716              		.fpu softvfp
 718              	MX_CRC_Init:
 719              	.LFB72:
 228:Core/Src/main.c **** 
 720              		.loc 1 228 1 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724 0000 08B5     		push	{r3, lr}
 725              	.LCFI9:
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 3, -8
 728              		.cfi_offset 14, -4
 237:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 729              		.loc 1 237 3 view .LVU251
 237:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 730              		.loc 1 237 17 is_stmt 0 view .LVU252
 731 0002 0348     		ldr	r0, .L23
 732 0004 034B     		ldr	r3, .L23+4
 733 0006 0360     		str	r3, [r0]
 238:Core/Src/main.c ****   {
 734              		.loc 1 238 3 is_stmt 1 view .LVU253
 238:Core/Src/main.c ****   {
 735              		.loc 1 238 7 is_stmt 0 view .LVU254
 736 0008 FFF7FEFF 		bl	HAL_CRC_Init
 737              	.LVL24:
 246:Core/Src/main.c **** 
 738              		.loc 1 246 1 view .LVU255
 739 000c 08BD     		pop	{r3, pc}
 740              	.L24:
 741 000e 00BF     		.align	2
 742              	.L23:
 743 0010 00000000 		.word	hcrc
 744 0014 00300240 		.word	1073885184
 745              		.cfi_endproc
 746              	.LFE72:
 748              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 749              		.align	2
 750              	.LC2:
 751 0000 4755495F 		.ascii	"GUI_TM_NORMAL\000"
ARM GAS  /tmp/ccNafqiz.s 			page 26


 751      544D5F4E 
 751      4F524D41 
 751      4C00
 752 000e 0000     		.align	2
 753              	.LC3:
 754 0010 4755495F 		.ascii	"GUI_TM_REV\000"
 754      544D5F52 
 754      455600
 755 001b 00       		.align	2
 756              	.LC4:
 757 001c 4755495F 		.ascii	"GUI_TM_TRANS\000"
 757      544D5F54 
 757      52414E53 
 757      00
 758 0029 000000   		.align	2
 759              	.LC5:
 760 002c 4755495F 		.ascii	"GUI_TM_XOR\000"
 760      544D5F58 
 760      4F5200
 761 0037 00       		.align	2
 762              	.LC6:
 763 0038 4755495F 		.ascii	"GUI_TM_TRANS | GUI_TM_REV\000"
 763      544D5F54 
 763      52414E53 
 763      207C2047 
 763      55495F54 
 764 0052 0000     		.align	2
 765              	.LC7:
 766 0054 31303148 		.ascii	"101Hello World!\000"
 766      656C6C6F 
 766      20576F72 
 766      6C642100 
 767              		.section	.text.StartDefaultTask,"ax",%progbits
 768              		.align	1
 769              		.global	StartDefaultTask
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu softvfp
 775              	StartDefaultTask:
 776              	.LVL25:
 777              	.LFB79:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** /* USER CODE END 4 */
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 577:Core/Src/main.c **** /**
 578:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 579:Core/Src/main.c ****   * @param  argument: Not used
 580:Core/Src/main.c ****   * @retval None
 581:Core/Src/main.c ****   */
 582:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 583:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 584:Core/Src/main.c **** {
 778              		.loc 1 584 1 is_stmt 1 view -0
ARM GAS  /tmp/ccNafqiz.s 			page 27


 779              		.cfi_startproc
 780              		@ Volatile: function does not return.
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		.loc 1 584 1 is_stmt 0 view .LVU257
 784 0000 08B5     		push	{r3, lr}
 785              	.LCFI10:
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 3, -8
 788              		.cfi_offset 14, -4
 585:Core/Src/main.c ****   /* init code for USB_HOST */
 586:Core/Src/main.c ****   MX_USB_HOST_Init();
 789              		.loc 1 586 3 is_stmt 1 view .LVU258
 790 0002 FFF7FEFF 		bl	MX_USB_HOST_Init
 791              	.LVL26:
 587:Core/Src/main.c ****   
 588:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 589:Core/Src/main.c ****   GUI_Init();
 792              		.loc 1 589 3 view .LVU259
 793 0006 FFF7FEFF 		bl	GUI_Init
 794              	.LVL27:
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   // GUI_SetBkColor(GUI_BLACK);
 592:Core/Src/main.c ****   // GUI_Clear();
 593:Core/Src/main.c ****   // GUI_DispStringAt("101Hello World!", 30, 10);
 594:Core/Src/main.c ****   GUI_SetFont(&GUI_Font8x16);
 795              		.loc 1 594 3 view .LVU260
 796 000a 4048     		ldr	r0, .L28
 797 000c FFF7FEFF 		bl	GUI_SetFont
 798              	.LVL28:
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** GUI_SetBkColor(GUI_BLUE);
 799              		.loc 1 596 1 view .LVU261
 800 0010 4FF47F00 		mov	r0, #16711680
 801 0014 FFF7FEFF 		bl	GUI_SetBkColor
 802              	.LVL29:
 597:Core/Src/main.c **** GUI_Clear();
 803              		.loc 1 597 1 view .LVU262
 804 0018 FFF7FEFF 		bl	GUI_Clear
 805              	.LVL30:
 598:Core/Src/main.c **** GUI_SetPenSize(10);
 806              		.loc 1 598 1 view .LVU263
 807 001c 0A20     		movs	r0, #10
 808 001e FFF7FEFF 		bl	GUI_SetPenSize
 809              	.LVL31:
 599:Core/Src/main.c **** GUI_SetColor(GUI_RED);
 810              		.loc 1 599 1 view .LVU264
 811 0022 FF20     		movs	r0, #255
 812 0024 FFF7FEFF 		bl	GUI_SetColor
 813              	.LVL32:
 600:Core/Src/main.c **** GUI_DrawLine(80, 10, 220, 90);
 814              		.loc 1 600 1 view .LVU265
 815 0028 5A23     		movs	r3, #90
 816 002a DC22     		movs	r2, #220
 817 002c 0A21     		movs	r1, #10
 818 002e 5020     		movs	r0, #80
 819 0030 FFF7FEFF 		bl	GUI_DrawLine
ARM GAS  /tmp/ccNafqiz.s 			page 28


 820              	.LVL33:
 601:Core/Src/main.c **** GUI_DrawLine(80, 90, 220, 10);
 821              		.loc 1 601 1 view .LVU266
 822 0034 0A23     		movs	r3, #10
 823 0036 DC22     		movs	r2, #220
 824 0038 5A21     		movs	r1, #90
 825 003a 5020     		movs	r0, #80
 826 003c FFF7FEFF 		bl	GUI_DrawLine
 827              	.LVL34:
 602:Core/Src/main.c **** GUI_SetBkColor(GUI_BLACK);
 828              		.loc 1 602 1 view .LVU267
 829 0040 0020     		movs	r0, #0
 830 0042 FFF7FEFF 		bl	GUI_SetBkColor
 831              	.LVL35:
 603:Core/Src/main.c **** GUI_SetColor(GUI_WHITE);
 832              		.loc 1 603 1 view .LVU268
 833 0046 6FF07F40 		mvn	r0, #-16777216
 834 004a FFF7FEFF 		bl	GUI_SetColor
 835              	.LVL36:
 604:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_NORMAL);
 836              		.loc 1 604 1 view .LVU269
 837 004e 0020     		movs	r0, #0
 838 0050 FFF7FEFF 		bl	GUI_SetTextMode
 839              	.LVL37:
 605:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_NORMAL" , 160, 10);
 840              		.loc 1 605 1 view .LVU270
 841 0054 0A22     		movs	r2, #10
 842 0056 A021     		movs	r1, #160
 843 0058 2D48     		ldr	r0, .L28+4
 844 005a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 845              	.LVL38:
 606:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_REV);
 846              		.loc 1 606 1 view .LVU271
 847 005e 0420     		movs	r0, #4
 848 0060 FFF7FEFF 		bl	GUI_SetTextMode
 849              	.LVL39:
 607:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_REV" , 160, 26);
 850              		.loc 1 607 1 view .LVU272
 851 0064 1A22     		movs	r2, #26
 852 0066 A021     		movs	r1, #160
 853 0068 2A48     		ldr	r0, .L28+8
 854 006a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 855              	.LVL40:
 608:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_TRANS);
 856              		.loc 1 608 1 view .LVU273
 857 006e 0220     		movs	r0, #2
 858 0070 FFF7FEFF 		bl	GUI_SetTextMode
 859              	.LVL41:
 609:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_TRANS" , 160, 42);
 860              		.loc 1 609 1 view .LVU274
 861 0074 2A22     		movs	r2, #42
 862 0076 A021     		movs	r1, #160
 863 0078 2748     		ldr	r0, .L28+12
 864 007a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 865              	.LVL42:
 610:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_XOR);
 866              		.loc 1 610 1 view .LVU275
ARM GAS  /tmp/ccNafqiz.s 			page 29


 867 007e 0120     		movs	r0, #1
 868 0080 FFF7FEFF 		bl	GUI_SetTextMode
 869              	.LVL43:
 611:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_XOR" , 160, 58);
 870              		.loc 1 611 1 view .LVU276
 871 0084 3A22     		movs	r2, #58
 872 0086 A021     		movs	r1, #160
 873 0088 2448     		ldr	r0, .L28+16
 874 008a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 875              	.LVL44:
 612:Core/Src/main.c **** GUI_SetTextMode(GUI_TM_TRANS | GUI_TM_REV);
 876              		.loc 1 612 1 view .LVU277
 877 008e 0620     		movs	r0, #6
 878 0090 FFF7FEFF 		bl	GUI_SetTextMode
 879              	.LVL45:
 613:Core/Src/main.c **** GUI_DispStringHCenterAt("GUI_TM_TRANS | GUI_TM_REV", 160, 74);
 880              		.loc 1 613 1 view .LVU278
 881 0094 4A22     		movs	r2, #74
 882 0096 A021     		movs	r1, #160
 883 0098 2148     		ldr	r0, .L28+20
 884 009a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 885              	.LVL46:
 614:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 0, 0);
 886              		.loc 1 614 1 view .LVU279
 887 009e 214C     		ldr	r4, .L28+24
 888 00a0 0022     		movs	r2, #0
 889 00a2 1146     		mov	r1, r2
 890 00a4 2046     		mov	r0, r4
 891 00a6 FFF7FEFF 		bl	GUI_DispStringAt
 892              	.LVL47:
 615:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 1, 20);
 893              		.loc 1 615 1 view .LVU280
 894 00aa 1422     		movs	r2, #20
 895 00ac 0121     		movs	r1, #1
 896 00ae 2046     		mov	r0, r4
 897 00b0 FFF7FEFF 		bl	GUI_DispStringAt
 898              	.LVL48:
 616:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 5, 40);
 899              		.loc 1 616 1 view .LVU281
 900 00b4 2822     		movs	r2, #40
 901 00b6 0521     		movs	r1, #5
 902 00b8 2046     		mov	r0, r4
 903 00ba FFF7FEFF 		bl	GUI_DispStringAt
 904              	.LVL49:
 617:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 10, 60);
 905              		.loc 1 617 1 view .LVU282
 906 00be 3C22     		movs	r2, #60
 907 00c0 0A21     		movs	r1, #10
 908 00c2 2046     		mov	r0, r4
 909 00c4 FFF7FEFF 		bl	GUI_DispStringAt
 910              	.LVL50:
 618:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 20, 80);
 911              		.loc 1 618 1 view .LVU283
 912 00c8 5022     		movs	r2, #80
 913 00ca 1421     		movs	r1, #20
 914 00cc 2046     		mov	r0, r4
 915 00ce FFF7FEFF 		bl	GUI_DispStringAt
ARM GAS  /tmp/ccNafqiz.s 			page 30


 916              	.LVL51:
 619:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 50, 100);
 917              		.loc 1 619 1 view .LVU284
 918 00d2 6422     		movs	r2, #100
 919 00d4 3221     		movs	r1, #50
 920 00d6 2046     		mov	r0, r4
 921 00d8 FFF7FEFF 		bl	GUI_DispStringAt
 922              	.LVL52:
 620:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 100, 120);
 923              		.loc 1 620 1 view .LVU285
 924 00dc 7822     		movs	r2, #120
 925 00de 6421     		movs	r1, #100
 926 00e0 2046     		mov	r0, r4
 927 00e2 FFF7FEFF 		bl	GUI_DispStringAt
 928              	.LVL53:
 621:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 200, 140);
 929              		.loc 1 621 1 view .LVU286
 930 00e6 8C22     		movs	r2, #140
 931 00e8 C821     		movs	r1, #200
 932 00ea 2046     		mov	r0, r4
 933 00ec FFF7FEFF 		bl	GUI_DispStringAt
 934              	.LVL54:
 622:Core/Src/main.c **** GUI_DispStringAt("101Hello World!", 300, 160);
 935              		.loc 1 622 1 view .LVU287
 936 00f0 A022     		movs	r2, #160
 937 00f2 4FF49671 		mov	r1, #300
 938 00f6 2046     		mov	r0, r4
 939 00f8 FFF7FEFF 		bl	GUI_DispStringAt
 940              	.LVL55:
 941              	.L26:
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /* Infinite loop */
 625:Core/Src/main.c ****   for(;;)
 942              		.loc 1 625 3 discriminator 1 view .LVU288
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 943              		.loc 1 627 5 discriminator 1 view .LVU289
 944 00fc 0421     		movs	r1, #4
 945 00fe 0A48     		ldr	r0, .L28+28
 946 0100 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 947              	.LVL56:
 628:Core/Src/main.c ****     osDelay(100);
 948              		.loc 1 628 5 discriminator 1 view .LVU290
 949 0104 6420     		movs	r0, #100
 950 0106 FFF7FEFF 		bl	osDelay
 951              	.LVL57:
 625:Core/Src/main.c ****   {
 952              		.loc 1 625 8 discriminator 1 view .LVU291
 953 010a F7E7     		b	.L26
 954              	.L29:
 955              		.align	2
 956              	.L28:
 957 010c 00000000 		.word	GUI_Font8x16
 958 0110 00000000 		.word	.LC2
 959 0114 10000000 		.word	.LC3
 960 0118 1C000000 		.word	.LC4
 961 011c 2C000000 		.word	.LC5
ARM GAS  /tmp/ccNafqiz.s 			page 31


 962 0120 38000000 		.word	.LC6
 963 0124 54000000 		.word	.LC7
 964 0128 00140140 		.word	1073812480
 965              		.cfi_endproc
 966              	.LFE79:
 968              		.section	.text.SystemClock_Config,"ax",%progbits
 969              		.align	1
 970              		.global	SystemClock_Config
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 974              		.fpu softvfp
 976              	SystemClock_Config:
 977              	.LFB71:
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 978              		.loc 1 164 1 view -0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 112
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 983              	.LCFI11:
 984              		.cfi_def_cfa_offset 20
 985              		.cfi_offset 4, -20
 986              		.cfi_offset 5, -16
 987              		.cfi_offset 6, -12
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 9DB0     		sub	sp, sp, #116
 991              	.LCFI12:
 992              		.cfi_def_cfa_offset 136
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 993              		.loc 1 165 3 view .LVU293
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 994              		.loc 1 165 22 is_stmt 0 view .LVU294
 995 0004 0024     		movs	r4, #0
 996 0006 1294     		str	r4, [sp, #72]
 997 0008 1494     		str	r4, [sp, #80]
 166:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 998              		.loc 1 166 3 is_stmt 1 view .LVU295
 166:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 999              		.loc 1 166 22 is_stmt 0 view .LVU296
 1000 000a 0994     		str	r4, [sp, #36]
 1001 000c 0A94     		str	r4, [sp, #40]
 1002 000e 0B94     		str	r4, [sp, #44]
 1003 0010 0C94     		str	r4, [sp, #48]
 1004 0012 0D94     		str	r4, [sp, #52]
 167:Core/Src/main.c **** 
 1005              		.loc 1 167 3 is_stmt 1 view .LVU297
 167:Core/Src/main.c **** 
 1006              		.loc 1 167 28 is_stmt 0 view .LVU298
 1007 0014 2022     		movs	r2, #32
 1008 0016 2146     		mov	r1, r4
 1009 0018 01A8     		add	r0, sp, #4
 1010 001a FFF7FEFF 		bl	memset
 1011              	.LVL58:
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1012              		.loc 1 172 3 is_stmt 1 view .LVU299
ARM GAS  /tmp/ccNafqiz.s 			page 32


 172:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1013              		.loc 1 172 36 is_stmt 0 view .LVU300
 1014 001e 0923     		movs	r3, #9
 1015 0020 0E93     		str	r3, [sp, #56]
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 1016              		.loc 1 173 3 is_stmt 1 view .LVU301
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 1017              		.loc 1 173 30 is_stmt 0 view .LVU302
 1018 0022 4FF48033 		mov	r3, #65536
 1019 0026 1093     		str	r3, [sp, #64]
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1020              		.loc 1 174 3 is_stmt 1 view .LVU303
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1021              		.loc 1 174 36 is_stmt 0 view .LVU304
 1022 0028 0422     		movs	r2, #4
 1023 002a 1192     		str	r2, [sp, #68]
 175:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1024              		.loc 1 175 3 is_stmt 1 view .LVU305
 175:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1025              		.loc 1 175 30 is_stmt 0 view .LVU306
 1026 002c 0125     		movs	r5, #1
 1027 002e 1395     		str	r5, [sp, #76]
 176:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
 1028              		.loc 1 176 3 is_stmt 1 view .LVU307
 176:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
 1029              		.loc 1 176 30 is_stmt 0 view .LVU308
 1030 0030 1595     		str	r5, [sp, #84]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1031              		.loc 1 177 3 is_stmt 1 view .LVU309
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1032              		.loc 1 177 35 is_stmt 0 view .LVU310
 1033 0032 0F93     		str	r3, [sp, #60]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1034              		.loc 1 178 3 is_stmt 1 view .LVU311
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1035              		.loc 1 178 34 is_stmt 0 view .LVU312
 1036 0034 0226     		movs	r6, #2
 1037 0036 1696     		str	r6, [sp, #88]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1038              		.loc 1 179 3 is_stmt 1 view .LVU313
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1039              		.loc 1 179 35 is_stmt 0 view .LVU314
 1040 0038 1793     		str	r3, [sp, #92]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
 1041              		.loc 1 180 3 is_stmt 1 view .LVU315
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
 1042              		.loc 1 180 32 is_stmt 0 view .LVU316
 1043 003a 4FF4E013 		mov	r3, #1835008
 1044 003e 1893     		str	r3, [sp, #96]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
 1045              		.loc 1 181 3 is_stmt 1 view .LVU317
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
 1046              		.loc 1 181 36 is_stmt 0 view .LVU318
 1047 0040 1996     		str	r6, [sp, #100]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 1048              		.loc 1 182 3 is_stmt 1 view .LVU319
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
ARM GAS  /tmp/ccNafqiz.s 			page 33


 1049              		.loc 1 182 34 is_stmt 0 view .LVU320
 1050 0042 4FF4C063 		mov	r3, #1536
 1051 0046 1A93     		str	r3, [sp, #104]
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1052              		.loc 1 183 3 is_stmt 1 view .LVU321
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1053              		.loc 1 183 42 is_stmt 0 view .LVU322
 1054 0048 4027     		movs	r7, #64
 1055 004a 1B97     		str	r7, [sp, #108]
 184:Core/Src/main.c ****   {
 1056              		.loc 1 184 3 is_stmt 1 view .LVU323
 184:Core/Src/main.c ****   {
 1057              		.loc 1 184 7 is_stmt 0 view .LVU324
 1058 004c 0EA8     		add	r0, sp, #56
 1059 004e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1060              	.LVL59:
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1061              		.loc 1 190 3 is_stmt 1 view .LVU325
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1062              		.loc 1 190 31 is_stmt 0 view .LVU326
 1063 0052 0F23     		movs	r3, #15
 1064 0054 0993     		str	r3, [sp, #36]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1065              		.loc 1 192 3 is_stmt 1 view .LVU327
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1066              		.loc 1 192 34 is_stmt 0 view .LVU328
 1067 0056 0A96     		str	r6, [sp, #40]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1068              		.loc 1 193 3 is_stmt 1 view .LVU329
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1069              		.loc 1 193 35 is_stmt 0 view .LVU330
 1070 0058 0B94     		str	r4, [sp, #44]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1071              		.loc 1 194 3 is_stmt 1 view .LVU331
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1072              		.loc 1 194 36 is_stmt 0 view .LVU332
 1073 005a 4FF48063 		mov	r3, #1024
 1074 005e 0C93     		str	r3, [sp, #48]
 195:Core/Src/main.c **** 
 1075              		.loc 1 195 3 is_stmt 1 view .LVU333
 195:Core/Src/main.c **** 
 1076              		.loc 1 195 36 is_stmt 0 view .LVU334
 1077 0060 0D94     		str	r4, [sp, #52]
 197:Core/Src/main.c ****   {
 1078              		.loc 1 197 3 is_stmt 1 view .LVU335
 197:Core/Src/main.c ****   {
 1079              		.loc 1 197 7 is_stmt 0 view .LVU336
 1080 0062 3146     		mov	r1, r6
 1081 0064 09A8     		add	r0, sp, #36
 1082 0066 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1083              	.LVL60:
 201:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1084              		.loc 1 201 3 is_stmt 1 view .LVU337
 201:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1085              		.loc 1 201 38 is_stmt 0 view .LVU338
 1086 006a 1123     		movs	r3, #17
 1087 006c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccNafqiz.s 			page 34


 202:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV3;
 1088              		.loc 1 202 3 is_stmt 1 view .LVU339
 202:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV3;
 1089              		.loc 1 202 35 is_stmt 0 view .LVU340
 1090 006e 4FF40073 		mov	r3, #512
 1091 0072 0293     		str	r3, [sp, #8]
 203:Core/Src/main.c ****   PeriphClkInit.PLLI2S.PLLI2SMUL = RCC_PLLI2S_MUL10;
 1092              		.loc 1 203 3 is_stmt 1 view .LVU341
 203:Core/Src/main.c ****   PeriphClkInit.PLLI2S.PLLI2SMUL = RCC_PLLI2S_MUL10;
 1093              		.loc 1 203 35 is_stmt 0 view .LVU342
 1094 0074 0894     		str	r4, [sp, #32]
 204:Core/Src/main.c ****   PeriphClkInit.PLLI2S.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 1095              		.loc 1 204 3 is_stmt 1 view .LVU343
 204:Core/Src/main.c ****   PeriphClkInit.PLLI2S.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 1096              		.loc 1 204 34 is_stmt 0 view .LVU344
 1097 0076 4FF40043 		mov	r3, #32768
 1098 007a 0693     		str	r3, [sp, #24]
 205:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1099              		.loc 1 205 3 is_stmt 1 view .LVU345
 205:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1100              		.loc 1 205 40 is_stmt 0 view .LVU346
 1101 007c 0797     		str	r7, [sp, #28]
 206:Core/Src/main.c ****   {
 1102              		.loc 1 206 3 is_stmt 1 view .LVU347
 206:Core/Src/main.c ****   {
 1103              		.loc 1 206 7 is_stmt 0 view .LVU348
 1104 007e 01A8     		add	r0, sp, #4
 1105 0080 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1106              	.LVL61:
 210:Core/Src/main.c ****   /** Configure the Systick interrupt time
 1107              		.loc 1 210 3 is_stmt 1 view .LVU349
 1108 0084 2246     		mov	r2, r4
 1109 0086 4FF03061 		mov	r1, #184549376
 1110 008a 2046     		mov	r0, r4
 1111 008c FFF7FEFF 		bl	HAL_RCC_MCOConfig
 1112              	.LVL62:
 213:Core/Src/main.c ****   /** Configure the Systick interrupt time
 1113              		.loc 1 213 3 view .LVU350
 1114 0090 074A     		ldr	r2, .L32
 1115 0092 D36A     		ldr	r3, [r2, #44]
 1116 0094 23F0F003 		bic	r3, r3, #240
 1117 0098 3B43     		orrs	r3, r3, r7
 1118 009a D362     		str	r3, [r2, #44]
 216:Core/Src/main.c ****   /** Configure the Systick interrupt time
 1119              		.loc 1 216 3 view .LVU351
 1120 009c D36A     		ldr	r3, [r2, #44]
 1121 009e 23F47043 		bic	r3, r3, #61440
 1122 00a2 43F40043 		orr	r3, r3, #32768
 1123 00a6 D362     		str	r3, [r2, #44]
 219:Core/Src/main.c **** }
 1124              		.loc 1 219 3 view .LVU352
 1125 00a8 024B     		ldr	r3, .L32+4
 1126 00aa 1D60     		str	r5, [r3]
 220:Core/Src/main.c **** 
 1127              		.loc 1 220 1 is_stmt 0 view .LVU353
 1128 00ac 1DB0     		add	sp, sp, #116
 1129              	.LCFI13:
ARM GAS  /tmp/ccNafqiz.s 			page 35


 1130              		.cfi_def_cfa_offset 20
 1131              		@ sp needed
 1132 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 1133              	.L33:
 1134              		.align	2
 1135              	.L32:
 1136 00b0 00100240 		.word	1073876992
 1137 00b4 70004242 		.word	1111621744
 1138              		.cfi_endproc
 1139              	.LFE71:
 1141              		.section	.text.main,"ax",%progbits
 1142              		.align	1
 1143              		.global	main
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu softvfp
 1149              	main:
 1150              	.LFB70:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1151              		.loc 1 87 1 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ Volatile: function does not return.
 1154              		@ args = 0, pretend = 0, frame = 32
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156 0000 00B5     		push	{lr}
 1157              	.LCFI14:
 1158              		.cfi_def_cfa_offset 4
 1159              		.cfi_offset 14, -4
 1160 0002 89B0     		sub	sp, sp, #36
 1161              	.LCFI15:
 1162              		.cfi_def_cfa_offset 40
  95:Core/Src/main.c **** 
 1163              		.loc 1 95 3 view .LVU355
 1164 0004 FFF7FEFF 		bl	HAL_Init
 1165              	.LVL63:
 102:Core/Src/main.c **** 
 1166              		.loc 1 102 3 view .LVU356
 1167 0008 FFF7FEFF 		bl	SystemClock_Config
 1168              	.LVL64:
 109:Core/Src/main.c ****   MX_SPI1_Init();
 1169              		.loc 1 109 3 view .LVU357
 1170 000c FFF7FEFF 		bl	MX_GPIO_Init
 1171              	.LVL65:
 110:Core/Src/main.c ****   MX_RTC_Init();
 1172              		.loc 1 110 3 view .LVU358
 1173 0010 FFF7FEFF 		bl	MX_SPI1_Init
 1174              	.LVL66:
 111:Core/Src/main.c ****   MX_SPI3_Init();
 1175              		.loc 1 111 3 view .LVU359
 1176 0014 FFF7FEFF 		bl	MX_RTC_Init
 1177              	.LVL67:
 112:Core/Src/main.c ****   MX_USART2_UART_Init();
 1178              		.loc 1 112 3 view .LVU360
 1179 0018 FFF7FEFF 		bl	MX_SPI3_Init
 1180              	.LVL68:
 113:Core/Src/main.c ****   MX_CRC_Init();
ARM GAS  /tmp/ccNafqiz.s 			page 36


 1181              		.loc 1 113 3 view .LVU361
 1182 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 1183              	.LVL69:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1184              		.loc 1 114 3 view .LVU362
 1185 0020 FFF7FEFF 		bl	MX_CRC_Init
 1186              	.LVL70:
 137:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1187              		.loc 1 137 3 view .LVU363
 1188 0024 01AC     		add	r4, sp, #4
 1189 0026 084D     		ldr	r5, .L37
 1190 0028 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1191 002a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1192 002c 95E80700 		ldm	r5, {r0, r1, r2}
 1193 0030 84E80700 		stm	r4, {r0, r1, r2}
 138:Core/Src/main.c **** 
 1194              		.loc 1 138 3 view .LVU364
 138:Core/Src/main.c **** 
 1195              		.loc 1 138 23 is_stmt 0 view .LVU365
 1196 0034 0021     		movs	r1, #0
 1197 0036 01A8     		add	r0, sp, #4
 1198 0038 FFF7FEFF 		bl	osThreadCreate
 1199              	.LVL71:
 138:Core/Src/main.c **** 
 1200              		.loc 1 138 21 view .LVU366
 1201 003c 034B     		ldr	r3, .L37+4
 1202 003e 1860     		str	r0, [r3]
 145:Core/Src/main.c **** 
 1203              		.loc 1 145 3 is_stmt 1 view .LVU367
 1204 0040 FFF7FEFF 		bl	osKernelStart
 1205              	.LVL72:
 1206              	.L35:
 150:Core/Src/main.c ****   {
 1207              		.loc 1 150 3 discriminator 1 view .LVU368
 155:Core/Src/main.c ****   /* USER CODE END 3 */
 1208              		.loc 1 155 3 discriminator 1 view .LVU369
 150:Core/Src/main.c ****   {
 1209              		.loc 1 150 9 discriminator 1 view .LVU370
 1210 0044 FEE7     		b	.L35
 1211              	.L38:
 1212 0046 00BF     		.align	2
 1213              	.L37:
 1214 0048 00000000 		.word	.LANCHOR0
 1215 004c 00000000 		.word	defaultTaskHandle
 1216              		.cfi_endproc
 1217              	.LFE70:
 1219              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1220              		.align	1
 1221              		.global	MX_I2C1_Init
 1222              		.syntax unified
 1223              		.thumb
 1224              		.thumb_func
 1225              		.fpu softvfp
 1227              	MX_I2C1_Init:
 1228              	.LFB73:
 254:Core/Src/main.c **** 
 1229              		.loc 1 254 1 view -0
ARM GAS  /tmp/ccNafqiz.s 			page 37


 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233 0000 08B5     		push	{r3, lr}
 1234              	.LCFI16:
 1235              		.cfi_def_cfa_offset 8
 1236              		.cfi_offset 3, -8
 1237              		.cfi_offset 14, -4
 263:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 1238              		.loc 1 263 3 view .LVU372
 263:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 1239              		.loc 1 263 18 is_stmt 0 view .LVU373
 1240 0002 0948     		ldr	r0, .L41
 1241 0004 094B     		ldr	r3, .L41+4
 1242 0006 0360     		str	r3, [r0]
 264:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1243              		.loc 1 264 3 is_stmt 1 view .LVU374
 264:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1244              		.loc 1 264 25 is_stmt 0 view .LVU375
 1245 0008 094B     		ldr	r3, .L41+8
 1246 000a 4360     		str	r3, [r0, #4]
 265:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 20;
 1247              		.loc 1 265 3 is_stmt 1 view .LVU376
 265:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 20;
 1248              		.loc 1 265 24 is_stmt 0 view .LVU377
 1249 000c 0023     		movs	r3, #0
 1250 000e 8360     		str	r3, [r0, #8]
 266:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1251              		.loc 1 266 3 is_stmt 1 view .LVU378
 266:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1252              		.loc 1 266 26 is_stmt 0 view .LVU379
 1253 0010 1422     		movs	r2, #20
 1254 0012 C260     		str	r2, [r0, #12]
 267:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1255              		.loc 1 267 3 is_stmt 1 view .LVU380
 267:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1256              		.loc 1 267 29 is_stmt 0 view .LVU381
 1257 0014 4FF48042 		mov	r2, #16384
 1258 0018 0261     		str	r2, [r0, #16]
 268:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1259              		.loc 1 268 3 is_stmt 1 view .LVU382
 268:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1260              		.loc 1 268 30 is_stmt 0 view .LVU383
 1261 001a 4361     		str	r3, [r0, #20]
 269:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1262              		.loc 1 269 3 is_stmt 1 view .LVU384
 269:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1263              		.loc 1 269 26 is_stmt 0 view .LVU385
 1264 001c 8361     		str	r3, [r0, #24]
 270:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1265              		.loc 1 270 3 is_stmt 1 view .LVU386
 270:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1266              		.loc 1 270 30 is_stmt 0 view .LVU387
 1267 001e C361     		str	r3, [r0, #28]
 271:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1268              		.loc 1 271 3 is_stmt 1 view .LVU388
 271:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
ARM GAS  /tmp/ccNafqiz.s 			page 38


 1269              		.loc 1 271 28 is_stmt 0 view .LVU389
 1270 0020 0362     		str	r3, [r0, #32]
 272:Core/Src/main.c ****   {
 1271              		.loc 1 272 3 is_stmt 1 view .LVU390
 272:Core/Src/main.c ****   {
 1272              		.loc 1 272 7 is_stmt 0 view .LVU391
 1273 0022 FFF7FEFF 		bl	HAL_I2C_Init
 1274              	.LVL73:
 280:Core/Src/main.c **** 
 1275              		.loc 1 280 1 view .LVU392
 1276 0026 08BD     		pop	{r3, pc}
 1277              	.L42:
 1278              		.align	2
 1279              	.L41:
 1280 0028 00000000 		.word	hi2c1
 1281 002c 00540040 		.word	1073763328
 1282 0030 801A0600 		.word	400000
 1283              		.cfi_endproc
 1284              	.LFE73:
 1286              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1287              		.align	1
 1288              		.global	HAL_TIM_PeriodElapsedCallback
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1292              		.fpu softvfp
 1294              	HAL_TIM_PeriodElapsedCallback:
 1295              	.LVL74:
 1296              	.LFB80:
 629:Core/Src/main.c ****   }
 630:Core/Src/main.c ****   /* USER CODE END 5 */
 631:Core/Src/main.c **** }
 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** /**
 634:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 635:Core/Src/main.c ****   * @note   This function is called  when TIM2 interrupt took place, inside
 636:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 637:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 638:Core/Src/main.c ****   * @param  htim : TIM handle
 639:Core/Src/main.c ****   * @retval None
 640:Core/Src/main.c ****   */
 641:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 642:Core/Src/main.c **** {
 1297              		.loc 1 642 1 is_stmt 1 view -0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301              		.loc 1 642 1 is_stmt 0 view .LVU394
 1302 0000 08B5     		push	{r3, lr}
 1303              	.LCFI17:
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 3, -8
 1306              		.cfi_offset 14, -4
 643:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 646:Core/Src/main.c ****   if (htim->Instance == TIM2) {
ARM GAS  /tmp/ccNafqiz.s 			page 39


 1307              		.loc 1 646 3 is_stmt 1 view .LVU395
 1308              		.loc 1 646 11 is_stmt 0 view .LVU396
 1309 0002 0368     		ldr	r3, [r0]
 1310              		.loc 1 646 6 view .LVU397
 1311 0004 B3F1804F 		cmp	r3, #1073741824
 1312 0008 00D0     		beq	.L46
 1313              	.LVL75:
 1314              	.L43:
 647:Core/Src/main.c ****     HAL_IncTick();
 648:Core/Src/main.c ****   }
 649:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 652:Core/Src/main.c **** }
 1315              		.loc 1 652 1 view .LVU398
 1316 000a 08BD     		pop	{r3, pc}
 1317              	.LVL76:
 1318              	.L46:
 647:Core/Src/main.c ****     HAL_IncTick();
 1319              		.loc 1 647 5 is_stmt 1 view .LVU399
 1320 000c FFF7FEFF 		bl	HAL_IncTick
 1321              	.LVL77:
 1322              		.loc 1 652 1 is_stmt 0 view .LVU400
 1323 0010 FBE7     		b	.L43
 1324              		.cfi_endproc
 1325              	.LFE80:
 1327              		.section	.text.Error_Handler,"ax",%progbits
 1328              		.align	1
 1329              		.global	Error_Handler
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1333              		.fpu softvfp
 1335              	Error_Handler:
 1336              	.LFB81:
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** /**
 655:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 656:Core/Src/main.c ****   * @retval None
 657:Core/Src/main.c ****   */
 658:Core/Src/main.c **** void Error_Handler(void)
 659:Core/Src/main.c **** {
 1337              		.loc 1 659 1 is_stmt 1 view -0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              		@ link register save eliminated.
 660:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 661:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 664:Core/Src/main.c **** }
 1342              		.loc 1 664 1 view .LVU402
 1343 0000 7047     		bx	lr
 1344              		.cfi_endproc
 1345              	.LFE81:
 1347              		.comm	defaultTaskHandle,4,4
ARM GAS  /tmp/ccNafqiz.s 			page 40


 1348              		.comm	huart2,64,4
 1349              		.comm	hspi3,88,4
 1350              		.comm	hspi1,88,4
 1351              		.comm	hrtc,20,4
 1352              		.comm	hi2c1,84,4
 1353              		.comm	hcrc,8,4
 1354              		.section	.rodata
 1355              		.align	2
 1356              		.set	.LANCHOR0,. + 0
 1357              	.LC8:
 1358 0000 00000000 		.word	.LC0
 1359 0004 00000000 		.word	StartDefaultTask
 1360 0008 0000     		.short	0
 1361 000a 0000     		.space	2
 1362 000c 00000000 		.word	0
 1363 0010 80000000 		.word	128
 1364 0014 00000000 		.word	0
 1365 0018 00000000 		.word	0
 1366              		.text
 1367              	.Letext0:
 1368              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 1369              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1370              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1371              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1372              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f107xc.h"
 1373              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1374              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1375              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1376              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1377              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1378              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1379              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_crc.h"
 1380              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1381              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 1382              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1383              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1384              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1385              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1386              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 1387              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1388              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1389              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1390              		.file 24 "Middlewares/ST/STemWin/inc/LCD.h"
 1391              		.file 25 "Middlewares/ST/STemWin/inc/GUI.h"
 1392              		.file 26 "Middlewares/ST/STemWin/inc/GUI_Type.h"
 1393              		.file 27 "USB_HOST/App/usb_host.h"
 1394              		.file 28 "<built-in>"
ARM GAS  /tmp/ccNafqiz.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccNafqiz.s:13     .rodata.str1.4:0000000000000000 $d
     /tmp/ccNafqiz.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccNafqiz.s:27     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccNafqiz.s:387    .text.MX_GPIO_Init:00000000000001b0 $d
     /tmp/ccNafqiz.s:398    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccNafqiz.s:404    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccNafqiz.s:469    .text.MX_SPI1_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccNafqiz.s:475    .text.MX_SPI3_Init:0000000000000000 $t
     /tmp/ccNafqiz.s:481    .text.MX_SPI3_Init:0000000000000000 MX_SPI3_Init
     /tmp/ccNafqiz.s:545    .text.MX_SPI3_Init:0000000000000034 $d
                            *COM*:0000000000000058 hspi3
     /tmp/ccNafqiz.s:551    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccNafqiz.s:557    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccNafqiz.s:645    .text.MX_RTC_Init:0000000000000064 $d
                            *COM*:0000000000000014 hrtc
     /tmp/ccNafqiz.s:651    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccNafqiz.s:657    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccNafqiz.s:706    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccNafqiz.s:712    .text.MX_CRC_Init:0000000000000000 $t
     /tmp/ccNafqiz.s:718    .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/ccNafqiz.s:743    .text.MX_CRC_Init:0000000000000010 $d
                            *COM*:0000000000000008 hcrc
     /tmp/ccNafqiz.s:749    .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccNafqiz.s:768    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccNafqiz.s:775    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccNafqiz.s:957    .text.StartDefaultTask:000000000000010c $d
     /tmp/ccNafqiz.s:969    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccNafqiz.s:976    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccNafqiz.s:1136   .text.SystemClock_Config:00000000000000b0 $d
     /tmp/ccNafqiz.s:1142   .text.main:0000000000000000 $t
     /tmp/ccNafqiz.s:1149   .text.main:0000000000000000 main
     /tmp/ccNafqiz.s:1214   .text.main:0000000000000048 $d
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccNafqiz.s:1220   .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccNafqiz.s:1227   .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccNafqiz.s:1280   .text.MX_I2C1_Init:0000000000000028 $d
                            *COM*:0000000000000054 hi2c1
     /tmp/ccNafqiz.s:1287   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccNafqiz.s:1294   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccNafqiz.s:1328   .text.Error_Handler:0000000000000000 $t
     /tmp/ccNafqiz.s:1335   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccNafqiz.s:1355   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_UART_Init
HAL_CRC_Init
MX_USB_HOST_Init
ARM GAS  /tmp/ccNafqiz.s 			page 42


GUI_Init
GUI_SetFont
GUI_SetBkColor
GUI_Clear
GUI_SetPenSize
GUI_SetColor
GUI_DrawLine
GUI_SetTextMode
GUI_DispStringHCenterAt
GUI_DispStringAt
HAL_GPIO_TogglePin
osDelay
GUI_Font8x16
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_MCOConfig
HAL_Init
osThreadCreate
osKernelStart
HAL_I2C_Init
HAL_IncTick
